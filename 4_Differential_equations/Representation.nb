(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    331624,       6390]
NotebookOptionsPosition[    329266,       6342]
NotebookOutlinePosition[    329640,       6358]
CellTagsIndexPosition[    329597,       6355]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hoja 4: Ecuaciones diferenciales", "Title",
 CellChangeTimes->{{3.7832571061611814`*^9, 
  3.7832571193635035`*^9}},ExpressionUUID->"675e1b50-f446-45af-8fd8-\
b7b11c0c607d"],

Cell["Ejercicio1:", "Subtitle",
 CellChangeTimes->{{3.783257128599672*^9, 
  3.7832571357072163`*^9}},ExpressionUUID->"31d8b2b9-819d-45e6-a8e9-\
db3031887f0d"],

Cell["\<\
Vamos a hallar el valor anal\[IAcute]tico de la ecuaci\[OAcute]n diferencial:\
\>", "Text",
 CellChangeTimes->{{3.783257148548107*^9, 3.7832571701072483`*^9}, {
  3.783257786635975*^9, 
  3.7832577908224964`*^9}},ExpressionUUID->"e5786c72-c71c-4f29-9ff5-\
283e45483cea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dy", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"y", "[", "x", "]"}], "-", 
        RowBox[{
         RowBox[{"Exp", "[", "x", "]"}], "*", 
         RowBox[{"Cos", "[", "x", "]"}], "*", 
         RowBox[{"Sin", "[", "x", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"grafica", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "dy"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dashing", "[", 
        RowBox[{"{", 
         RowBox[{"0.01", ",", "0.01"}], "}"}], "]"}], ",", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7832633897765903`*^9, 3.7832633900736575`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"0700604d-3b33-4eda-839b-efb33dba2953"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", "x"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7832633618460255`*^9, 3.7832634006644297`*^9, 
  3.784383960028491*^9, 3.7843842080212884`*^9, 3.784384255919828*^9, 
  3.78438521531047*^9, 3.784386399908857*^9, 3.7843905373274527`*^9, 
  3.7843906866302986`*^9, 3.7855129887949724`*^9, 3.7855130651191063`*^9, 
  3.785513755407064*^9, 3.785513934427661*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"a0fe5602-6e7f-48b8-ac82-0fc608e575ff"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{0.01, 0.01}], LineBox[CompressedData["
1:eJwVl3k8lN8Xx2ds84zBhCQkIUJIpURyb1lalOyl7EmR7JXKEilRSkKSypZC
Uvb93uxllyW7rxCVKFvZ5vf8/pl5vV9znvt87uece+4ZSXs347NsFApFjPz4
//eRs+OteOKSVurhdfIUyq9SDm1R90ERU1AAV4xqD6WV73wRG58j4gCcGtVu
HjL8WD6yYXPgFVlXkKayzm3dzb5y/cau7Gci3oDWteXuH5uJ8s33xF+yJK6C
c+4zVZLdM+XLR848tpP1B/xZZRvLni2Xfw9ur7KLCQRRfTfbUgLY0QmHhbJI
kWAglWe4lBRAR1XaogWV8beBlt1L0LBlDVKR3vduViIUWKh995X6K4ji2WzT
ZJLvgsToeSHV7esRMRyUZC57HzzW+Lti+3kDKh5qa6w0jQBI2OxZ8NQm5G7o
cMQy5iEw8RT11EuXRv3bQrTDRaKA6Nh4vAmSR1Ev1mOZ09HA+ObjPSwRJXSE
ma5ZHh8DDLb9ClM0U0H5vxp2TUk8AYzOU/tddqsiF2vr7BC7OPA76c7xrOO7
kVTTlPKm5KdAtV2NoRC8B93PFJAzkn0OooYeHdwC9iFd8ZSUiXMvQHO7/Pae
aoD8a+LWfDBNABHK1EYB1f1IdbdiuEVMIlgjUuM9w9JGCULHb4eJpIBibf8c
K3AEXW98XGVenALOf+blvvhHH5nfGmKTPv0SMIyMOtJyjiGeOY+AkvhUQDNQ
1nV9Z4h82qN8fkqkAbPhm3zlOabI5F5/fiFOA5flZi1Ta8yQso7sXLBdOjCw
HNbqHDJHIzkFHuLJGcD514W9MlstkNGjHmcD2bdAZG9o6db11khRXzpNtPYt
qBZv1V0+a4MIdpdvY+eyQBZ9tjjJyhbZFK2+R6bvgJju3h1K5XZISD5C+WTM
eyAXY+b27I0DCiRytoSK5IKSPNPVZ/svIIWDD+9ku+eC0lALazF1F9R2y22i
tzYXXJVIY6rtuog2sytmKF/OA2ffvtxusdcN1aykKLe35YNb23Pv9yIP5KZ5
88GKfAGw4DzVdcTAE62/bjctG1gA/J5xi4oMeiKnv+LZV7cVgptSdtd6aN6I
ZyZml8S9IoCFmIpyly+jvO2XYg59LQKzswV1NcJXkLW7yYKHRjHYx6Ol1V5y
BWVNMouqxotBq8BQqjbjKjIev6PprFsKhgQkxd/UXkex/de081bLgZItf6NK
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
xWLCmgTHj2d1t+H/ASPCE5c=
       "]]},
     Annotation[#, "Charting`Private`Tag$41684#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7832633618460255`*^9, 3.7832634006644297`*^9, 
  3.784383960028491*^9, 3.7843842080212884`*^9, 3.784384255919828*^9, 
  3.78438521531047*^9, 3.784386399908857*^9, 3.7843905373274527`*^9, 
  3.7843906866302986`*^9, 3.7855129887949724`*^9, 3.7855130651191063`*^9, 
  3.785513755407064*^9, 3.785513934609647*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"97107d53-38f0-48b7-9b75-436ded3b6c0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"taylor10", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<taylor010.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heun10", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<heun010.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oilar10", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<oilar010.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rk410", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<rk4010.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graftaylor10", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"taylor10", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Taylor\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafheun10", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"heun10", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.75", ",", "0.25"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Heun\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafoilar10", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"oilar10", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Euler mod. /pto. medio\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafrk410", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"rk410", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.59", ",", "0", ",", "0.5"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Runge-Kutta, orden 4\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "grafica", ",", "graftaylor10", ",", "grafheun10", ",", "grafoilar10", ",", 
   "grafrk410"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ7XNd885f/TeOzxpKv4Hok7qBf0D0hhxepn9AuvlF
vRCIzpP8IQOin3VWKILo88vrwfQP8cWqYFo5RQ9EB73LNALR/+a02IDoRQ8v
u4LoY3y73UF0WFn0BhCt12a0A0Qf/fp/N4ieYRm2H0TPO7fwCYhWumP3Cqx/
mvN7EH1Wqv8jiE5YqmL3H0jvmhnuCqLPhXl4g2h13ydget1apysg2kx3xR0Q
fdf5xEsQ/czD8hWIjrrO9xFEu7yQ+Ayid6Tv/Q6iqx/z/gDRv47alDAYvHFc
2HQMTKcpcHeA6C2TefpB9AVe88kgenFvFJg+sCAuT8HojePUw7/BNMNH/zJl
IN0ur1QLoh8s/zMNRC8w+jwDRKs1J55QAdKX1x+6AqJ3XGLg8DZ541hhpsQJ
ogG1d9JY
  "],
 CellLabel->
  "In[151]:=",ExpressionUUID->"d7f05bcb-d7e8-40c5-9f60-2b1da16fc27a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{0.01, 0.01}], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVl3k8lN8Xx2ds84zBhCQkIUJIpURyb1lalOyl7EmR7JXKEilRSkKSypZC
Uvb93uxllyW7rxCVKFvZ5vf8/pl5vV9znvt87uece+4ZSXs347NsFApFjPz4
//eRs+OteOKSVurhdfIUyq9SDm1R90ERU1AAV4xqD6WV73wRG58j4gCcGtVu
HjL8WD6yYXPgFVlXkKayzm3dzb5y/cau7Gci3oDWteXuH5uJ8s33xF+yJK6C
c+4zVZLdM+XLR848tpP1B/xZZRvLni2Xfw9ur7KLCQRRfTfbUgLY0QmHhbJI
kWAglWe4lBRAR1XaogWV8beBlt1L0LBlDVKR3vduViIUWKh995X6K4ji2WzT
ZJLvgsToeSHV7esRMRyUZC57HzzW+Lti+3kDKh5qa6w0jQBI2OxZ8NQm5G7o
cMQy5iEw8RT11EuXRv3bQrTDRaKA6Nh4vAmSR1Ev1mOZ09HA+ObjPSwRJXSE
ma5ZHh8DDLb9ClM0U0H5vxp2TUk8AYzOU/tddqsiF2vr7BC7OPA76c7xrOO7
kVTTlPKm5KdAtV2NoRC8B93PFJAzkn0OooYeHdwC9iFd8ZSUiXMvQHO7/Pae
aoD8a+LWfDBNABHK1EYB1f1IdbdiuEVMIlgjUuM9w9JGCULHb4eJpIBibf8c
K3AEXW98XGVenALOf+blvvhHH5nfGmKTPv0SMIyMOtJyjiGeOY+AkvhUQDNQ
1nV9Z4h82qN8fkqkAbPhm3zlOabI5F5/fiFOA5flZi1Ta8yQso7sXLBdOjCw
HNbqHDJHIzkFHuLJGcD514W9MlstkNGjHmcD2bdAZG9o6db11khRXzpNtPYt
qBZv1V0+a4MIdpdvY+eyQBZ9tjjJyhbZFK2+R6bvgJju3h1K5XZISD5C+WTM
eyAXY+b27I0DCiRytoSK5IKSPNPVZ/svIIWDD+9ku+eC0lALazF1F9R2y22i
tzYXXJVIY6rtuog2sytmKF/OA2ffvtxusdcN1aykKLe35YNb23Pv9yIP5KZ5
88GKfAGw4DzVdcTAE62/bjctG1gA/J5xi4oMeiKnv+LZV7cVgptSdtd6aN6I
ZyZml8S9IoCFmIpyly+jvO2XYg59LQKzswV1NcJXkLW7yYKHRjHYx6Ol1V5y
BWVNMouqxotBq8BQqjbjKjIev6PprFsKhgQkxd/UXkex/de081bLgZItf6NK
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
xWLCmgTHj2d1t+H/ASPCE5c=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$41684#1"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]], 
         PointBox[{{0., 0.}, {0.444444444444, 0.}, {
          0.888888888889, -0.269077309187}, {
          1.33333333333, -0.917668790276}, {1.77777777778, -1.71101947102}, {
          2.22222222222, -1.94259819898}, {2.66666666667, -0.828521991496}, {
          3.11111111111, 1.40443898143}, {3.55555555556, 2.33252923339}, {
          4., -2.36054623027}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]], 
         PointBox[{{0., 0.}, {0.444444444444, -0.134538654594}, {
          0.888888888889, -0.666455775684}, {1.33333333333, -1.60328676433}, {
          1.77777777778, -2.48818592371}, {2.22222222222, -2.46910167678}, {
          2.66666666667, -1.08158497575}, {3.11111111111, 0.361474324259}, {
          3.55555555556, -2.08756698425}, {4., -13.3616137975}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]], 
         PointBox[{{0., 0.}, {0.444444444444, -0.119322337403}, {
          0.888888888889, -0.664618041897}, {1.33333333333, -1.6800155271}, {
          1.77777777778, -2.71036954781}, {2.22222222222, -2.8224622855}, {
          2.66666666667, -1.39508215027}, {3.11111111111, 0.358924887712}, {
          3.55555555556, -1.70925285726}, {4., -13.196888052}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]], 
         PointBox[{{0., 0.}, {0.444444444444, -0.144035980154}, {
          0.888888888889, -0.73268189695}, {1.33333333333, -1.7910793061}, {
          1.77777777778, -2.83221815737}, {2.22222222222, -2.91620585059}, {
          2.66666666667, -1.5025998519}, {
          3.11111111111, -0.006550497698683}, {
          3.55555555556, -2.82333948036}, {4., -15.6173235188}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Taylor\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Heun\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.75, 0.25], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.5, 0.16666666666666669`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.75`", ",", "0.25`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.75, 0.25]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.75, 0.25], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Euler mod. /pto. medio\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Runge-Kutta, orden 4\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.59, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3933333333333333, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.59`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.59, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.59, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7832579094829593`*^9, 3.78325798279068*^9, {3.7832583270777025`*^9, 
   3.7832583452381573`*^9}, 3.7832583813406053`*^9, 3.7832584846981606`*^9, {
   3.783258564518697*^9, 3.783258575692844*^9}, 3.783258617795248*^9, 
   3.7832586908561516`*^9, 3.783259587977482*^9, {3.783259632088818*^9, 
   3.783259644387005*^9}, 3.7832599883871307`*^9, {3.783260035644365*^9, 
   3.7832600456435456`*^9}, 3.7832606110841284`*^9, 3.783260702941496*^9, {
   3.7832607429237022`*^9, 3.7832607687590127`*^9}, 3.7832618792098475`*^9, 
   3.7832619268333473`*^9, {3.783262026211954*^9, 3.7832620363008575`*^9}, 
   3.783262105996845*^9, 3.783262145527543*^9, 3.783263150773654*^9, {
   3.7832632990654936`*^9, 3.783263305615448*^9}, 3.7832633620178857`*^9, 
   3.7832634008362656`*^9, 3.7843839681451902`*^9, 3.7843842093593044`*^9, 
   3.7843842568143177`*^9, 3.784385216173668*^9, 3.784386224712842*^9, 
   3.784386274516994*^9, 3.784386401065044*^9, 3.784390538624257*^9, 
   3.784390687848983*^9, 3.785512996114504*^9, 3.7855130664800167`*^9, 
   3.785513756658987*^9, 3.7855139357585707`*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"b02915f6-736c-46a1-b12d-aeecb1dde187"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"taylor25", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<taylor025.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heun25", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<heun025.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oilar25", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<oilar025.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rk425", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<rk4025.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graftaylor25", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"taylor25", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Taylor\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafheun25", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"heun25", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.75", ",", "0.25"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Heun\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafoilar25", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"oilar25", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Euler mod. /pto. medio\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafrk425", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"rk425", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.59", ",", "0", ",", "0.5"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Runge-Kutta, orden 4\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "grafica", ",", "graftaylor25", ",", "grafheun25", ",", "grafoilar25", ",", 
   "grafrk425"}], "]"}]}], "Input",
 CellChangeTimes->{{3.783263234695597*^9, 3.7832632456515555`*^9}, {
  3.7843771936243258`*^9, 3.7843771993011866`*^9}, {3.7843835512425933`*^9, 
  3.7843836403353224`*^9}, {3.784383761138826*^9, 3.7843837649674945`*^9}, {
  3.784384240472746*^9, 3.7843842448729334`*^9}, {3.784386300930567*^9, 
  3.784386317816634*^9}, {3.784386356638644*^9, 3.7843863845777225`*^9}, {
  3.785513037182884*^9, 3.7855130436054773`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"7650f6b0-5c91-4e9d-bba6-1b336431296d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{0.01, 0.01}], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVl3k8lN8Xx2ds84zBhCQkIUJIpURyb1lalOyl7EmR7JXKEilRSkKSypZC
Uvb93uxllyW7rxCVKFvZ5vf8/pl5vV9znvt87uece+4ZSXs347NsFApFjPz4
//eRs+OteOKSVurhdfIUyq9SDm1R90ERU1AAV4xqD6WV73wRG58j4gCcGtVu
HjL8WD6yYXPgFVlXkKayzm3dzb5y/cau7Gci3oDWteXuH5uJ8s33xF+yJK6C
c+4zVZLdM+XLR848tpP1B/xZZRvLni2Xfw9ur7KLCQRRfTfbUgLY0QmHhbJI
kWAglWe4lBRAR1XaogWV8beBlt1L0LBlDVKR3vduViIUWKh995X6K4ji2WzT
ZJLvgsToeSHV7esRMRyUZC57HzzW+Lti+3kDKh5qa6w0jQBI2OxZ8NQm5G7o
cMQy5iEw8RT11EuXRv3bQrTDRaKA6Nh4vAmSR1Ev1mOZ09HA+ObjPSwRJXSE
ma5ZHh8DDLb9ClM0U0H5vxp2TUk8AYzOU/tddqsiF2vr7BC7OPA76c7xrOO7
kVTTlPKm5KdAtV2NoRC8B93PFJAzkn0OooYeHdwC9iFd8ZSUiXMvQHO7/Pae
aoD8a+LWfDBNABHK1EYB1f1IdbdiuEVMIlgjUuM9w9JGCULHb4eJpIBibf8c
K3AEXW98XGVenALOf+blvvhHH5nfGmKTPv0SMIyMOtJyjiGeOY+AkvhUQDNQ
1nV9Z4h82qN8fkqkAbPhm3zlOabI5F5/fiFOA5flZi1Ta8yQso7sXLBdOjCw
HNbqHDJHIzkFHuLJGcD514W9MlstkNGjHmcD2bdAZG9o6db11khRXzpNtPYt
qBZv1V0+a4MIdpdvY+eyQBZ9tjjJyhbZFK2+R6bvgJju3h1K5XZISD5C+WTM
eyAXY+b27I0DCiRytoSK5IKSPNPVZ/svIIWDD+9ku+eC0lALazF1F9R2y22i
tzYXXJVIY6rtuog2sytmKF/OA2ffvtxusdcN1aykKLe35YNb23Pv9yIP5KZ5
88GKfAGw4DzVdcTAE62/bjctG1gA/J5xi4oMeiKnv+LZV7cVgptSdtd6aN6I
ZyZml8S9IoCFmIpyly+jvO2XYg59LQKzswV1NcJXkLW7yYKHRjHYx6Ol1V5y
BWVNMouqxotBq8BQqjbjKjIev6PprFsKhgQkxd/UXkex/de081bLgZItf6NK
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
xWLCmgTHj2d1t+H/ASPCE5c=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$41684#1"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQ7sW0KB4Kg9jP/QFsS/an/x64vzf2sX7IeIPrAv
i059+Zt9z36BRJD8U/vSGXNDk9TO7/8wbxUQvLIPY9w0Md3lDlT9B/v5Vg5t
l2Y82+//FCT/yf5LAuMUzaoP+zdKgfR/tfc0SJY4FvgNqv6HfSf3lW2GUX+g
6n/ZT9F6cfDRV4YDEPV/7Wu+u2SEyTIfgDrToWnzljOnTVkOLC8CyTM63H+g
e2z7TeYDkb0g/UwO02vOFC47wAhVz+IQEnb3zsf1v/dD1LM6OD3q9z+x88N+
iHo2hzvLzjDdsD8PdQ+Hw6X101M2Sz60h6jndDDj3yPgXfrRHqKey6EopNJS
/8QnaLjxODjdMphXs+0+VD2vw4q5bLO9D32Gms/n4MWVxBMhLAh1j4DDB3uj
K1HtigcArpKkkg==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQ7sW0KB4Kj9xa8vzv+tnbD/oS2If9XeZ+3cuwKP
Nu2HqHpgX7HtFY//q+P7BRJB8k/tLc27NqlVX9//Yd4qIHhlr7fe3fnF7cdQ
9R/si5oNxOf4vtvv/xQk/8m+f7nY0anRX/dvlALp/2o/P3XqWwPdP1D1P+y1
vJ+2lLYwHoCo/2V/wimOjXU6ywGI+r/2VZPKdPfcYzsAdbbDZ/cNp5pesR9Y
XgSSZ3T4oWdyyTqa/UBkL0g/k4OftfbkzD8sUPUsDhG6Cwv+3meAqmd1mHo1
8rvll2/7IerZHBoi8jKnP3wGdQ+Hw8Str1LDPh/YD1HP6aCi+C54teJGe4h6
Lgf3levPnphzC6qex8G7sFBCquUfVD2vgwH7WbalT4Sg7uFzuCTitCvURgnq
HgGHittRsvsL9Q4AANRfp6E=
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQ7sW0KB4Kh96uOXhxiO9e1/aAviX7WX8NozLz9m
036Iqgf26zi7zO5MOb5fIBEk/9T+8TL9KXeCru//MG8VELyyD+4KtNt/8TFU
/Qf7Q3M36nyKeLff/ylI/pP9hhRjhotFX/dvlALp/2rv3rhsm3PsH6j6H/Z1
P6K/hq9hPABR/8u+qPyvYMpFlgMQ9X/t5f05RE7osB+AOtvB96/IF29vjgPL
i0DyjA7LXnp/kTvNfiCyF6SfyeHnwQ8a20tYoepZHMIFbgUxhzNC1bM6VOxO
f15w/Pt+iHo2h6qaiwu/ybyAuofDQXefZdKJrMP7Ieo5HdJ+LZ0e5LbJHqKe
yyGv7yRDxc4bUPU8Dvs26WlXbP4LVc/rMH2+dfidJUJQ9/A5SFgwKeyWV4K6
R8BBZ/e/rO2pegcAf7Wmxw==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQ7sW0KB4Kj9PP+KfI+lE/Y/tAXxr9ofs8r6vV5+
836Iqgf2be+NbNY7nNgvkAiSf2ovkpmdLXn1+v4P81YBwSv7PVaimenaT6Dq
P9g7nil4uOj0u/3+T0Hyn+xfRHUe2r796/6NUiD9X+1VFHjPZ6z+A1X/w55r
Mbe4zTXGAxD1v+zT3vNmXfrNcgCi/q/9I3/hv+Gh7AegznY4Iay94W8+x4Hl
RSB5RodrLnoLxV6zH4jsBelncngRumWz/ERWqHoWh5a1D1XZSxih6lkdtqUf
uftM6Md+iHo2h73iXgJcXC+h7uFw+GqzsYpv+sn9EPWcDsc3OL/cKl0HVc/l
wGRzLaXZ4wFUPY/Dmeffawx9GKDm8zpIaf8tu7lCGOoePofgA3rM988qQd0j
4GDR9+aUmqv+AQARFqOb
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Taylor\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Heun\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.75, 0.25], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.5, 0.16666666666666669`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.75`", ",", "0.25`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.75, 0.25]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.75, 0.25], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Euler mod. /pto. medio\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Runge-Kutta, orden 4\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.59, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3933333333333333, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.59`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.59, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.59, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7832632499649267`*^9, 3.783263305881033*^9, 
  3.783263362095991*^9, 3.783263400929987*^9, 3.7843839719532423`*^9, 
  3.78438421017605*^9, 3.7843842573786097`*^9, 3.7843852167362075`*^9, 
  3.784386402471219*^9, 3.7843905396267395`*^9, 3.7843906887083106`*^9, 
  3.785513000249243*^9, 3.78551306754795*^9, 3.785513757749917*^9, 
  3.7855139368185043`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"94a6299c-f908-4035-8a35-e5e1eddf0804"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"taylor50", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<taylor050.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heun50", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<heun050.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oilar50", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<oilar050.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rk450", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<rk4050.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graftaylor50", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"taylor50", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Taylor\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafheun50", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"heun50", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.75", ",", "0.25"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Heun\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafoilar50", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"oilar50", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Euler mod. /pto. medio\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafrk450", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"rk450", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.59", ",", "0", ",", "0.5"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Runge-Kutta, orden 4\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "grafica", ",", "graftaylor50", ",", "grafheun50", ",", "grafoilar50", ",", 
   "grafrk450"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7832632634145403`*^9, 3.7832632690071*^9}, {
  3.7843771869689546`*^9, 3.7843771909212756`*^9}, {3.784383774267089*^9, 
  3.784383800626223*^9}, {3.784383831966853*^9, 3.7843838853896503`*^9}, {
  3.784386304445865*^9, 3.7843863211914167`*^9}, {3.7843863612966604`*^9, 
  3.784386391069375*^9}, {3.785513046648281*^9, 3.7855130562846684`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"d33b4660-0f0a-4591-be94-1e70e382c953"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{0.01, 0.01}], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVl3k8lN8Xx2ds84zBhCQkIUJIpURyb1lalOyl7EmR7JXKEilRSkKSypZC
Uvb93uxllyW7rxCVKFvZ5vf8/pl5vV9znvt87uece+4ZSXs347NsFApFjPz4
//eRs+OteOKSVurhdfIUyq9SDm1R90ERU1AAV4xqD6WV73wRG58j4gCcGtVu
HjL8WD6yYXPgFVlXkKayzm3dzb5y/cau7Gci3oDWteXuH5uJ8s33xF+yJK6C
c+4zVZLdM+XLR848tpP1B/xZZRvLni2Xfw9ur7KLCQRRfTfbUgLY0QmHhbJI
kWAglWe4lBRAR1XaogWV8beBlt1L0LBlDVKR3vduViIUWKh995X6K4ji2WzT
ZJLvgsToeSHV7esRMRyUZC57HzzW+Lti+3kDKh5qa6w0jQBI2OxZ8NQm5G7o
cMQy5iEw8RT11EuXRv3bQrTDRaKA6Nh4vAmSR1Ev1mOZ09HA+ObjPSwRJXSE
ma5ZHh8DDLb9ClM0U0H5vxp2TUk8AYzOU/tddqsiF2vr7BC7OPA76c7xrOO7
kVTTlPKm5KdAtV2NoRC8B93PFJAzkn0OooYeHdwC9iFd8ZSUiXMvQHO7/Pae
aoD8a+LWfDBNABHK1EYB1f1IdbdiuEVMIlgjUuM9w9JGCULHb4eJpIBibf8c
K3AEXW98XGVenALOf+blvvhHH5nfGmKTPv0SMIyMOtJyjiGeOY+AkvhUQDNQ
1nV9Z4h82qN8fkqkAbPhm3zlOabI5F5/fiFOA5flZi1Ta8yQso7sXLBdOjCw
HNbqHDJHIzkFHuLJGcD514W9MlstkNGjHmcD2bdAZG9o6db11khRXzpNtPYt
qBZv1V0+a4MIdpdvY+eyQBZ9tjjJyhbZFK2+R6bvgJju3h1K5XZISD5C+WTM
eyAXY+b27I0DCiRytoSK5IKSPNPVZ/svIIWDD+9ku+eC0lALazF1F9R2y22i
tzYXXJVIY6rtuog2sytmKF/OA2ffvtxusdcN1aykKLe35YNb23Pv9yIP5KZ5
88GKfAGw4DzVdcTAE62/bjctG1gA/J5xi4oMeiKnv+LZV7cVgptSdtd6aN6I
ZyZml8S9IoCFmIpyly+jvO2XYg59LQKzswV1NcJXkLW7yYKHRjHYx6Ol1V5y
BWVNMouqxotBq8BQqjbjKjIev6PprFsKhgQkxd/UXkex/de081bLgZItf6NK
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
xWLCmgTHj2d1t+H/ASPCE5c=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$41684#1"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxdkn0s1HEcx3/duePOw5mdZ+YhqosxJdHi87XSPGZDZcYaztwfHiKGErKi
klY2FJZsYaGM6hql789yJld5TEZGOi4P5fmhc9HvN9c/fbfvvvvs8/R+v/a1
ikoMimEQBHGIuvT7/1lnOtZOTL2AfzGn04GKO2COvGsXkHkFS192KnpDe6D7
TJDP5/ZSLNKi6wfhQuVjVqToCZ5to9IWI2Db9PR1zS0xjkuk68fBbuC8adls
O6497FNk4zMJyv5zOV6p3ap+GXwy23bJudaPBVP8NxW5cvB3SzhYOz6smjcL
D+reSpBgAteXTFAV84D1//gsxstwRRE9fwFMxGZVU64zWDtzKL9TsQh91vZG
R3J+4aGz9L5lcNfkcLxNlnGlEzW+dAUuKj3X0izXVPtXgW8m0HD22sRO8qom
D+d1uB9jz+Gnb2FFO61nA2y5Zoaj1dv4XQU1vncTout8y8O+EuTtNFqfAmQW
HyP8/RmkJyNhVBy/BUm5Je7yYibJHaP1KiGxVSnqq1cjB14FLyZztyE0T+j2
KIdF7urfgckgt4AwdTbZLKbkBRNIKK0J13Zmk4Y2tB8CXe35uZCqZJGX7/EK
16r2oCzLyH3iUBY5se1N+WOgZ6Lg54Yn1chjHVT7IgM1PERWg20MctcvEyWZ
zwSNvSdIZuUaZVAN7dTkBXp8V6r8q6FYI2mg8OYG/pAhauAVstAcJytxvnlJ
xYONvkhi4xxc5Lg4hLI3ykZdSJhBOA2p+KgjyAD0YzUbQvJPt0sFGih7xdWm
jTkILas0Lw2UAgxdffQNzKOodDoHVaeUOfqtyiC3h+bHRSOWvaY9TBlMH3em
DHNRQ2spT69gBPzq4qmFmohIjimTlhfiRkNKLl8LiY2HTzVFTGP+dZqvFrJf
atFK6VLgBF+TuRPR2qhAnOy5LlFX8dZBjQe67G9c0iOP2lL4mnTQ3pWh3xl3
TFT8eYjZEu5mbGBN7v56XSQxKLZJrd9P/gVQ+4fI
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]], 
         PointBox[CompressedData["
1:eJxdk38s1GEcx793zt25O6RdR9cP+bW5IsRKJs+jrBxTlt+trSY3tNDSSpiV
EsKU+VE6u2GySGLlJvI8V5z8GCpRuDFO2qGu/Ioz9f3O/dWzPXv27PN53p/3
+7U9VpEJpyV0giAOkJs6/1/LBk7VE9MvwSy+vy8gNQ4ZKfeT93bwmZvt6aXI
Rz2vlGsD4f1A/Yi97YioEsXwqP5B0McMk2mcG5HmDVm2HAHj/MOlSvc2dCmB
6h8HLctK9SSrE1W7igtsxZMgLLtqx97bA/r3alDZfblUUDaERNP8Vmn6DKjN
c2E5qVR6PQ0I572WztpModriCbJjDoQ9tum4NzeDpAWU/k9wUdRfUe89j4xT
hzKVa1pgdyIirSLnFxoKpeb9Bo118tzWukUkcyHlSxZA5nRtoIduRT9/EZRE
uRlbSnTIZaa8wcttGSTzjubGft1AawrKzwqwwO46mRUNv5OS8gN/QJMkJFXW
Qce51yl/a8C3Z3VsxZ+Bvenxo01xOlDUe67etdoQc1SU33XQJ5nTZHUx8Sd5
kPYKZwMEbogPBlex8Kb/v+BOjbj4qSMbNzaR9oIIuG6z2341lI3Nbak8BEws
bH7YYc7GKQ9M85bKafBjTxQRG8vCExu+ZD465Hq9eD7ly8Qe7eRzLR2O+5ud
qpcz8GZeA2g0+KEmv5WODWRLZEAGTDafdY2IIvBmfgZs9HFkiDN0qPdGzDPT
PEOY+OO8sFu9pOfBhNfaGrIaHLSoKJiMN8qEXVwrlUAyrefDginR6OpwwjAK
zjyp6BGxYe2DlqQyLUbNixQvNnwf4qPaKgwAuyLJcpIR1ARHdx7/fgal91P8
OLDXUsWhyZXom6cbGZgD5QKzmy3bJ5F/TRw5kAs9kgP3jPktoHpz0i6fB+lT
DoVGFjTMz6D48uCtJyM1aSIujvcTzh67YAwdrQtG5SZ8PW8TCMv77zoLduJD
diS+BhM4H4PfEhPWev6mMFlxduBLjj3e/AVb4JBw0KDLxAn/A/5xkvU=
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxdk2ss21EYxquqqqUIwrDZxrKZpS4zapadYzZzWbCxhcSHucxkoxYfsKxZ
Mgk2cSmz2WgmysZGIu5Rl3MaVh8MTUZJG1GGGhZdXVPU/v/op53k5OTkfc/z
Ps8vOWeSMu89olIoFB9ik+f/a8fYs1G11AlCNF+ja1PTkZmUQ9yHQcpQ5GK2
Xxka7ZLqZHETYKqwso+9I0Jp5mT/JBDQPKyOLNvR6gBRdlGAkID+qEPrQZSe
SfbPgTqlxP2DVooaL4dVuIUtANWtzyKQKzO8XwTOcQeJuEKO3Jds+4V5ahAE
n5ZmTc4a9FZBeK+TWHv6F2p+ryI61sH8WEhEw5oaCStI/Q3g8tvPvSb4D7Lg
ywulOg14kwDH0kr/IvkDcp4WCO2uNOH2LVTrTchXbQLlArt6nbpnmL8FApwn
lzcy95G3uq7tuu8OoAS+7vyu1iOdhPSzC5LNjXylF43wkJCQl+0B1u5Dr1UZ
FRfnkP504ERF7nhRPA0HUXnK7ox90NJnnX++xwQzZ0m/B8AR+9evKOn4Z0+M
JoupBwUKXrOj2BQf+z8CgdPBHHSTgdu7CXsxFFiWpx3zfsbA9m5kHgr0cP3o
MufDwC/KLUu264ygzo5lwywwxSp9KJGPChub+LyaVDq+Okw811BhZUuKdHuK
ho/zGsOVA63viIKKjWu3iYA0uM2g6mSvKPg4Pw12dRjd5Q7sox/P01osS0yg
oEN8x9Vhx8CDDm2Kti7J4zXoXSwRT0mHq8KCxJHWJQMfUyjiTGSbqaZRbGGk
ZNSdARscikPZfAnq3SJ5MeBMZ055uxqik0lEOdcMcu7fOBV5e28wb4Lkx4T1
uaIMtbMULV/zJQIzobhKPChQzKOIbxnEQBbUcwVm6y6bqNWesGtrDhMEci98
SMG2+SRfczg++ZLbzGJhXrjjWnCyBax2enu0rLcx8GZDetQT+0q6M/Y/R+Br
Y0PRJ260buasgb8lXPA65D8uuICPf4EV/KIQzc+wPPE/4rWZ9Q==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQjQ6+Mesvf/B0i/2BfG5X/t7c/ZzH9ID8I/anmf4H
/rjZv//01mO/LkSct/9m1hE+x3Lx/gwekPor9p0VggZWjpv2v9oLlJa/Zc8/
8ZLs/pB9+3PyQerv27NdrCvZLnt8/3Jjz0kqno/sTeq2BilMvgDV/8T+aPui
tODN1/ZrPhXZM6fpuf2h9Z0LmH/fhZr3yr5h5opHQeaP96+e9gCo4o39FlkB
XlXWF/vnTAKZ/97e45vuQeOEt/t5a661H/v1wZ7NfN8To3kf918LA9n3yf7s
7u98Hw5/2T/fEGj89M/2F0JzdOJEf0Dt/2IfrfHpa2nz7/2GzxdutDP5Zi9z
YMMcjT//9v86CHLPd/st95bcdDVlPHB4DtD4Cz/sC/RcnafcZjrQUw5y3y97
YRFjM8sUlgOOTHm3t+X+tm+eqZy6+SDrAa67IPf+sX945reHzjO2A5e3B38o
4vpnv/Z6xK3Ph9kPQNz/3/5a/frjgn4cBzZtAzovmMGhxlz23KsKjgPiKiD/
MDhs2Zbw9LsVx4Hqify9XxcyOri5bHrc3ct+4ME/D6D/mByK0rSVFueyHbA6
AtT+gcnhNGtu6/Y7LAcg/mV2CD0YqjnpIdMB5vlfgR5kcWBtCboi1MlwAOJ/
FgdZ91PLTpz9vf9MZcYa/l5Wh9VewYwaOt+g4cHmYJWlJcxS/GH/1BCg926z
OTwXP1Vb9+EpNHzYHa4W/pBubL+xP6Td7+BpTQ6Hb59/VmnpHN6/8wsovDgc
GNvfGL06M3G/bBJQuoLTIT710dzdd6bubzoPCj8uB//KV6u0W0/uf2ZjAvQw
l4OwwRR3zeeP9nuvygVayO3QrnG1Tffw5/3rxYHOFeFxYN3jWbgjnvGASCso
fHkctHLP/7tQz30gz0vqtXMyr8NEwwSZT04i0PDmc3hTuvxMRqjMAXNVYPBt
5HPQ9v69SY1NGRr+/A4fJBRcl+zUOADJBQIOmzS4nJJc9Q8AAF7dkck=
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Taylor\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Heun\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.75, 0.25], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.5, 0.16666666666666669`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.75`", ",", "0.25`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.75, 0.25]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.75, 0.25], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Euler mod. /pto. medio\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Runge-Kutta, orden 4\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.59, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3933333333333333, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.59`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.59, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.59, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7832632715062094`*^9, 3.7832633059591413`*^9, 
  3.7832633621897197`*^9, 3.783263401008092*^9, 3.7843839759190073`*^9, 
  3.7843842107716236`*^9, 3.7843842580375123`*^9, 3.7843852173924174`*^9, 
  3.7843864034555397`*^9, 3.7843905405330544`*^9, 3.7843906897901154`*^9, 
  3.785513004408973*^9, 3.7855130686328793`*^9, 3.785513758975839*^9, 
  3.7855139377754426`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"541b16d2-2afa-4c3d-9882-9c43ad9744c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"taylor100", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<taylor100.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heun100", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<heun100.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oilar100", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<oilar100.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rk4100", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<rk4100.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graftaylor100", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"taylor100", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Taylor\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafheun100", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"heun100", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.75", ",", "0.25"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Heun\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafoilar100", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"oilar100", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Euler mod. /pto. medio\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafrk4100", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"rk4100", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.59", ",", "0", ",", "0.5"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Runge-Kutta, orden 4\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "grafica", ",", "graftaylor100", ",", "grafheun100", ",", "grafoilar100", 
   ",", "grafrk4100"}], "]"}]}], "Input",
 CellChangeTimes->{{3.783263277224884*^9, 3.783263280443068*^9}, {
  3.784383894538829*^9, 3.7843839471485214`*^9}, {3.784386308319391*^9, 
  3.7843863272555676`*^9}, {3.7843863667194443`*^9, 3.784386394853403*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"6f879676-b705-4efb-93be-4e27d1009dee"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{0.01, 0.01}], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVl3k8lN8Xx2ds84zBhCQkIUJIpURyb1lalOyl7EmR7JXKEilRSkKSypZC
Uvb93uxllyW7rxCVKFvZ5vf8/pl5vV9znvt87uece+4ZSXs347NsFApFjPz4
//eRs+OteOKSVurhdfIUyq9SDm1R90ERU1AAV4xqD6WV73wRG58j4gCcGtVu
HjL8WD6yYXPgFVlXkKayzm3dzb5y/cau7Gci3oDWteXuH5uJ8s33xF+yJK6C
c+4zVZLdM+XLR848tpP1B/xZZRvLni2Xfw9ur7KLCQRRfTfbUgLY0QmHhbJI
kWAglWe4lBRAR1XaogWV8beBlt1L0LBlDVKR3vduViIUWKh995X6K4ji2WzT
ZJLvgsToeSHV7esRMRyUZC57HzzW+Lti+3kDKh5qa6w0jQBI2OxZ8NQm5G7o
cMQy5iEw8RT11EuXRv3bQrTDRaKA6Nh4vAmSR1Ev1mOZ09HA+ObjPSwRJXSE
ma5ZHh8DDLb9ClM0U0H5vxp2TUk8AYzOU/tddqsiF2vr7BC7OPA76c7xrOO7
kVTTlPKm5KdAtV2NoRC8B93PFJAzkn0OooYeHdwC9iFd8ZSUiXMvQHO7/Pae
aoD8a+LWfDBNABHK1EYB1f1IdbdiuEVMIlgjUuM9w9JGCULHb4eJpIBibf8c
K3AEXW98XGVenALOf+blvvhHH5nfGmKTPv0SMIyMOtJyjiGeOY+AkvhUQDNQ
1nV9Z4h82qN8fkqkAbPhm3zlOabI5F5/fiFOA5flZi1Ta8yQso7sXLBdOjCw
HNbqHDJHIzkFHuLJGcD514W9MlstkNGjHmcD2bdAZG9o6db11khRXzpNtPYt
qBZv1V0+a4MIdpdvY+eyQBZ9tjjJyhbZFK2+R6bvgJju3h1K5XZISD5C+WTM
eyAXY+b27I0DCiRytoSK5IKSPNPVZ/svIIWDD+9ku+eC0lALazF1F9R2y22i
tzYXXJVIY6rtuog2sytmKF/OA2ffvtxusdcN1aykKLe35YNb23Pv9yIP5KZ5
88GKfAGw4DzVdcTAE62/bjctG1gA/J5xi4oMeiKnv+LZV7cVgptSdtd6aN6I
ZyZml8S9IoCFmIpyly+jvO2XYg59LQKzswV1NcJXkLW7yYKHRjHYx6Ol1V5y
BWVNMouqxotBq8BQqjbjKjIev6PprFsKhgQkxd/UXkex/de081bLgZItf6NK
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
xWLCmgTHj2d1t+H/ASPCE5c=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$41684#1"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxdlX00lFkcx8e8z3gve+xQi1irtLK92GS5Nwal9KKUxsomtthWShHRZsli
K3bFsWpDKFskYpW09xIhRZiIlTCKsoxmMMbb7POcmX927znPec5z7r2/+/t9
v5/7e0z8jnoEUCkUij/xkO//D2Pkkd1RnAf++10GvBJjE8tavdH7udPj1SwE
Ms+FnxDfOomuFJDztYBnH0dzj4pHjzwObXr6dyPI9QoNufZdqmp9C6gwCmzN
sLiKEnYR07w2wP3jjOaUMF+1XwjqAjIaRLq3UfH81ydanTuBzvPmp5sld1Xx
uoDdHiujjtL7qOPGsSX1x3rAgW5uspUlVsV/DdLL/MJnpI+Q1VYnv97mPtCc
aJUlXt+AKsLI8waALHpXX8nCU7Qxx92my18EaosuhNw0a0VNTeT5g2DF3E0n
My0h8pzayxXOvAFVb8qvLLPvRL3GPkQ+Q2BRiYB7pbQbHd5ChE8ZBiW1ozn6
R3uR5CSZ3zvAaess2Gnbj6Kyj5Q2mo+APkWgbcB+EWI0kfn+A4zqqgUu19+g
5Mmw+NqqUZC/zqV6hc4w4hlHEfmLAaNwQCbPfI8qU2GR7/JxkOt7t3Sz8yg6
/ytZzzhIih3mFzHHUWi/s77PiQ9ghL0yPenUB7TPmqxPAnJ+YGvRZRJkuWpL
jABJgPDCBrW7ZyfQojNkvVKgaOzbS9WbQoNRO0b2cieAb3pYkFWxTFX/BOAV
nuU775CjEgNPYkyCapmh52eTMyiO50XoMQka14C0hMtzKOiwgCBiCshXb7OU
wAVkf4jURwYGRwxTawcUyPRP3+U7RmQgb3WkxVJEwVwGqdc0EMu7M9clqOEe
WkCqu40cLGFnLbHYQsVKf+Ug65dm2UEmDaftDJp3i5kBIYFuze73aFip5yww
zR0PdfSlYz9xMLFhFlwqb+Zlyul47Rip7xzYWB745NY5Bja0J9LRnwfIONKm
VY2JR+3CCb3nQXlWxfOgI0wsTIqwc/JbAGK3ZJvBR0xc2UXyowBmdXjgHpOF
L7w8kw+LFCDFn2MesYaFlX5Q4NmXegdaNrGw6eIallEUBR50k0Scc2bh9A2k
PxTYct43PsmChTl+tVW/m6hBgcAid3qciZV+qUHvgV6xwVUmfsuuJxJWg1X3
TPJDVzHx9gTSPyrcmPfbhpo8Bq4pbjS/fIQKO+Oep3AW6HhdpxvhJxVq6c7r
ptvRcdYeYvkiGkyu73lA20/DSn9p0FrzLxr/Wyo+Pd+cklFBg69/nIjL9VTD
Y2ak33QYY6wZ2PI5BfttJeTxocMpxc3xsv55lf90WGWqHhPrOIscpO0zaVQG
7DbIjO6PnUY3jpM8MODLQpE0sXASGWZ2FOsVMKCt260PJrUSdLGavC8MeIf3
hBF5XYxksMs/1Z0JM7MXrPHjdypemHDla9Y3jAURah8i0pcyId9orcf6xz3I
VZvkhwXNl/lsDlrahiptCFwyWJD/avrBru+xiicWDHNJl2bfjgfpr/pitR3Y
UDYUqTP1AgOKD8kXGwblJDdGez4DoXGi9RdFbFjteEyUs7odKHnjwLGmhIDO
hy/Adsu3oxqJHCiKRoovGR1AyR8HXmso3p2N2sHKtuFrP1txoetuZmUF/xnI
kgcSPHKhd/LlhuD4+4AdQcgp5ELbbdxsg6/KVfddHVqMpWXMPBAicT0RPkId
Av4pneSPB5GX61HiAHUYUB1sdH5OjJqCCdyMNOBAa80nK/RlSMmvBiwbrNM+
fViBCj6SEg1CA+akOO4JjaGreNaEWfoDCuYsB8dVTVoygjThpd5pHT09HSwT
kf1EE8YaFGjl/7QYHzg4TQikBWui6Lp0b30V71rQuYEfEJdiiF1LCXvLtaC1
7dD+aT1jfOcLsv9ow1OGL0IcLi3DZvuIcgXaMGUo/KG3y6eq+6ANS524ix0s
LbDyr6ADeRprpccdLfG/EVIUvg==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]], 
         PointBox[CompressedData["
1:eJxdlXs0lGkcx2fGjBmDJlEiu0YuZ61SUxlheR4rR665RFK2VnRBLCK3pFKh
0DY4XXSjTmlXKkVEz0O1EltuS7OqdRkk13UfZtj3PTN/7XvOe97znOd5fs/v
9/1+nt+rFxDuGUSjUCiBxEt+//9wkefNtuLb4MXpU2lPmpyRbPwExPCrfPFA
KPoqSRirZiKQ7u01x+lJRnn3yPlXgC5ONftVPwu99DywtaGjDtSH1owVbros
X/8ebOVm5h5+k49SvYhprWZQG1u0zS3svnx/KxDUNER4tjxCxdLdR5rs28H2
u/njpfZl8nhCkN+8gie8UoXa7kbo1EZ8BHMVokz38Bp5/H+AhftCp3bmH8jU
xS7g87tO4JBm0ThoWo/KYsjzukGJXvtxU5NGZHvLlS8M7AHHqR5tfHoLqq8n
zxeBC/wUN3ODNuQ9vYPdOtcLKpYun4o5L0Sfuf5EPv1gn+PZg03Wn9BBZyL8
hS/ANz/ysE9eJxqPJvMbABObs1bHvuhGiTdDH9cZDYIDAum4hN6LGPVkvkOA
v4uj4Rzej7KmYs68qhwG3lzp6QTJANLiJhL5jwL37kktn9+GUIUAFu0xHgM6
Vyc+uMaPovMXyXrGwG7nxuEXG/9FUV32mv5H/gW1P4k8vJ6No53ryfrGQZbQ
kp7rOIlM1jmf8EPEeGdLt1LfFFqWRNY7AUrendxLOz+DRInugzvYk6B8dGt6
gYVYXv8keNivHts9NIceaXsTzxQI07blnSmQoBQtX0KPKfDA8rmK8a4FFHzQ
jyBiGqRHmDpdY1Gw9QFSnxlQVugrTu6iYP3SPcbugzPgulpTbGMpFbMZpF6z
IIgzW6t8loY/KgQJXPli0P6Ds9ZtdwUs81cM1EaMrBbU6DjHI1jqdGIOvJ3e
6BldR8cyPedBRllmn380AweMhhEb5kGBvc4WJQ1FvGmE1FcCjCSta+sKFPEq
ayIdTSk45qjRM7GaiYetjhJ6S0FpsFX0lywmbk2Ps7ILWACHSr8NUR9g4goh
yc8ieG3x94OJNSyc8SHpDixaBMaqqFrXj4VlflCgNW8lzzmchfXVa5i6iRS4
4WKavUsIC+dakv5QYLLkda+eKwsrBbyqvKZHhTl5HrfF6iws84sKV7PHR8wQ
E/exaomEqbDw6X7vI25MvC2V9I8GUxZ7OwTVirimuM7oaigNTq/54PJ8pSI2
a3ci/KRByfXNiXu2M/ANH2L5MgU4c5UW5hhNxzJ/FaD2I233vEQFnCB9d+FS
mQI0reSZd4TQ8IgB6TcdZvs4ZYxsoeIAF0IefzpM7Xqua8ymYJn/dPiMUxV1
OVGKbCZa5nJoDJieI4rQqZtDdyNJHhiQ+baEvYE6i1ZdaSvWuMeA8a1/luuv
nUKZ1eR9YUCfc2klPJ9xNAOFgQJXRZjtJj39veqonBdF2PFGcp0mGEAt/UT6
E4qwT1ReY+sjQg4ckh8m1DbfN+/a/RlV8AlcLjGhTvPT4bzFv5CMJyYMrb5W
dDK5AeV+6jzFsWHBW6O5BqIMhCj+JF8smOtueQv7F6KolJ7NmT0sqJWgta7q
8lEk400JOsVvCt5vFga2mfQNq6QpwYih1BU0vyvy/qIENY9XU/l25WhN85f8
c6ZsGJ091FRi2IBuiA8RPLJhrvEvg/GWQsSKI+RsZcP7tlXxwcoi+X1XhpqR
QBCZMIxGa4nwccowLqmnzTx9Evk6hBMHKMNhm0z+3qR5VB9G4KarAlFKIj2k
jSrnVwW+N2z1wgJFfG/5BNEgVGDU4B2d3xeV5TyrQm5OkImKmhpOqZwyYQSr
QlYRr4J7QgPP9JD9RBVWRPB0XL1W4p/3zRICLYGVX6lJO9J15LwvgYE2Fw1/
zOZih8eEvU+XQH3GsdqXmvr4IY/sPxzYFSJcb9VoiA12EuX6cWBcqLntx6rv
5PeBA8V23+gd6zTBsr/EUhgvnovMMl+H/wMZxxKo
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0.75, 0.25]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxdlXs0lGkcx+c+465SudQiRVZU1iiLeR7bqo7LqlC6WBraJEfHLdQIUasb
IrZSG04upbIkltjnoYtlRMUZ2dxqkiS3Ydwn+75n5q/ec97znuc8z/N7fr/v
9/P8XkP+sV2HaBQKxZ94ye+3jwHalS0qvg3KeZrU2e3OSD4uA0U7RTJWXhD6
PH9ytJaNgCYIK+A1xKEbheT8UyB094/iUlPQk12Htze9bQAv1Y4V7NC/pljf
AmSF9wLQ41yU5E5M67wGzkv0k6t87ir2twHIteszEZagYtmB8FeO7SB27I11
nV2FIl4HiCj7yYt7uQaJCkJW1Id0glQvCWVTYJ0ifg8oHvhTuynpObJw2cLv
bu4FBfdSagWmQlRxnDzvPagNv3AzdO1L5JDjat3hLwbtcV1lCdRWJBSS538A
2olpvlmGIuQ5uUe5bbYPVNV0MmjnO1C3gTeRTz8wDGnMuGLbhQKcifCpn0Dy
7QUn76xeJIkg8xsA7JhIowc175EgO6i0wXgQ3NJzSAti9CGmkMz3C0iyavJb
CO5HKdLjZ59WD4G7y743jpsfQDoGAiL/EfD4ENe8ougLqkqH931MRwGqiJha
fnIEXUwj6xkFa87MU32sxlDYO8fl3uFjYLCmV4tbKUF7N5D1ScAUow9ipwlk
tt45fh+SgMc8rxMJ/VK0+BRZ7zjwMC7ivb40hT4IdgzuUZ4AxhBdfWk7o6h/
AuQ/KUkNG5lFJbqexCMFMet8NU7nz6NEHS9CDymI/y/XPvPXrygwYB9BxCTo
eXfkYYoyBdsfJvWZAi5f3luWiinYqNzHdMfgFHBn+u7cUknFykxSr2lQ+sy8
re4cDXfSD6W7Ws+AA/ncuznudCz3dwY80Erx+HkpA2fsDJQ5xc8CXfeWbOYL
BpbrOQei+43LbaKZmD8STGyYA5+VcMRGbRa2Gib1nQfSy2YWvEIW1rMn0lku
Awkxn7MfmbDxkG0kobcMtDfyvSavsHHb+WjbLfyvQLis2jlomI2rOkh+FsBb
HYcXGZYcfOnNqTx4fwHcuzPxD8eXg+V+UCB9wZATFcHBRkvq2PoCCiyfzHWs
DOHgzB9JfyhQj5Jzv9Gdg5X4T6tvGlJh/en47zp0OVjuFxVWZeW5bX3Oxh85
9UTCVBipk6JT7MnGbkmkfzQo4A43jP3LwnXFDcZZQTTY+btGpJUBC3PbnQg/
aXB/rarj4H4mvrWbWL6YDmM9zJK7BQws95cOI41edW9IpOOTsubUqxV0+Kwx
rcw/jIaHV5N+M2D+9Znhgy5UzHch5PFmQE3Q03NiEQXL/WdALZHSq3fnZYg3
3jqbQWPCN079+mOiWVQQSvLAhFRPgSxafRrpXRcVaxUy4ea6h388s5Gi5Fry
vhDrV25Q1eJL0BTs8E93ZcHca52Z9kYjCl5YUGng3FbLggHU2k+kP86CidWr
LnsHfEDbNEh+2HDk+m9iCq0HVVkTuFwlxvqnNofpipCcJzakSZ+zW4uaUGZX
b4IGjwOtJEkRec0IUbxJvjjQfMWStXEld1BYonhzspgDF/te6DepjkJy3pTg
k4nG/NT5YOBm9nFI9ZwSNFoz6NfZdU3RX5SgaqPdAVOVSrTu9afcCxbKsMxb
LPlBJkS3Zo4QPCrDHv6qG1oGHYgTTcjZpgyj5tOdbObEivuuAj3cjTf5BQyh
kXoifLQKHOfbVO6OnUBe244RB6hA1tzKgw6hc0gYTOCmrwr/Pvqw6UULVcGv
KoTMyoo7F1m4cOk40SBUoWWONc1qWkXBsxqsO7PawFxtEU6slpoxA9XgApPr
ahGjhafEZD9Rg76hti1ebtr4oN80IZA6HL0UjcLPrlDwrg43ZYza+acZ4G2l
hL2P1GHY1nUyxjIj/NdGsv9owKiC1lWFzWvw6r1Eufs0YKLV7djT1WsV90ED
0n7pMznaY4blfwlN2HJkNLvNej3+HxZsEaw=
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]], 
         PointBox[CompressedData["
1:eJxdlXlQU0ccxwPkIhzxHEFRwChFEJAWUBHcRSainEK5NeM0giiDMpRDGZDD
4oEiRqPgUSSIVIq1EUvBorArooggigYwHiA3AcN9Q2jfm+Sv7sybN29297e/
3/f72d8z5kf6hKpTKJQQ4iHf/x9GyEfULL4DykLvFgqb3JDyuwS8YhiKuEMR
qH8+YfgpA4Gts9TmrJ4U9GshOV8NkgPZvjyzi+iZT9iu+k+1YHo68qa3/XXV
+jfA5/qJ0H/qb6OzPxLT+u+AU5AZIyqmSLVfAoLXht062VKMxIp9MY3cFtCb
6mXp6FamiicF6wQFguG8CtR8N8qgJuozqKx+6VAdXaWK3wbyBzivs4UvkKW7
M7+14SvYKUyZv2Jbh8riyPM6QO2VgxnmVm+RU56HnTSkE5hc3XxsiPke1dWR
53eB9TUDgWhDM/KbDGBJZruBfdy5jo7LUtRqxCPy6QXzSOhkx/2CDrkR4QV9
YPZbOlsg+opGY8n8ZGDn4JY+52cdKFEU8bDWZADYugzKQlndiFZH5vsNOJrL
gvbF9qKLE3Gnq5/IwWBS4Gao0Y/0jRKJ/IfA58dcKH34DZUL4f39G4bBnde8
gBsnh1DGZbKeYYAkYRZeW0ZQdDt3BS9mBBzsj630qRhFQZvI+kbBiFtZtqbX
ODK3cksNRqPAX+wbNDkwgZYkkfWOgdLrHzdGXJ5CXYl7BgJY4+AI8/CrTDij
qn8cpLQdlfmMz6LilX7EmAAc+ffrk+/NozT9QEKPCVBVtIZ3/8ACCj8UTBAx
CfqTbNxNdCjYMYzUZwr4Gawt9+6hYE7p/g17BqZAXVb6JdljNcyikXpNgyMc
z9QjGer4s0ao0MNuBgg+GIZ5+mtgpb8zIPs5ejS8goqveocrXFNngdUZDSB+
Q8VKPefAtsW/cVoTaJg/dJTYMAfu7Nnv07CSjm0GSX3ngUEM1aKxiI5XORLp
rFCAFMsXlxzMGFi+7RihtwIU2LRYR2YzsORc/DZn/gI4KBixbRpm4HIpyc+/
YPG9vRZyGya+8CGpAN7/F/hy9Zw9+Eys9IMCqQpqSeExJuYsrWIYJlKgg2F+
clM0E2fZk/5QoHRmt/s7PybW5Fc/yTFWgz80x8TVGzCx0i81eEHR4GTykoF7
mDVEwmpQThcYnwhgYK+zpH/qsNmmSPvBKzquEtea3IxQh/jl1sZuYzq2bXEl
/FSHFwzzgoQ8Gs71J5Yv0YBdD8SS1CQqVvqrARdMYLHklAZOUDQIrpVpQIVu
wz52rDoeXEf6TYXe1Tl/rfRUw3x3Qh4eFf6x4L/IdSkFK/2nQqaI/xZlKtD2
sfezV9VpsFFwGnM+zaK7P5M80OCpyeUCvaXTaNWNZvGyQhp0+fi0VrZ9AmU+
Je8LDaq51o9Jw0bRFJSGCD3o0Lw9qm33piEVL3SoJVqtrlYqQ+97ifTH6DCw
t73ANr4LubBJfhhw7aF0v72mbajcjsDlGgNSax5Z6+9sRkqeGLDANDFci/0a
ZX35+gt7OxMKgwBsC8CIwiP5YkKLnEeS3j/voei0zi2ZnUzYPTUR8l3QKaTk
TRN6OIi4LS0+yMu8R66drgljTPP1xGdyVf1FE2Zkt4s3i8rRxnd9t89bsiC3
gh5b01qPcmcOEzyyYJ+hVLYrR4qY8YScEhZcxLIqSYRdqvuuBQPn8lc/L5Gj
oRoifLwWDCgdkXr/Po4CXSKJA7TgmkraLSfRHKo7SuBmqA3bE6qq5X1qKn61
oaOrTgK9kI4Ll48RDUIbmumnTcuWa6t41oENx4vP7Vi9GKc9mTCnhevAZN+I
U+czl+GpTrKf6EAPZlwei6+HfzowTQikCzmjJ93O3DBQ8a4LKbl6GZwcI+zy
kLD3b11Y1FsiSDbm4AfWZP9hw4q5prKOj+vxuiCi3GA2vHl8x67UWlPVfWBD
e925Smu5OVb+JRbBek/eQijXCv8HDR4W0Q==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0.59, 0, 0.5]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Taylor\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Heun\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0.75, 0.25]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.75, 0.25], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.5, 0.16666666666666669`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.75`", ",", "0.25`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.75, 0.25]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.75, 0.25], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Euler mod. /pto. medio\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Runge-Kutta, orden 4\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0.59, 0, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.59, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.3933333333333333, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.59`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.59, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.59, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7832632820517583`*^9, 3.783263306052869*^9}, 
   3.7832633622677937`*^9, 3.7832634011018186`*^9, 3.784383978633131*^9, 
   3.784384211570296*^9, 3.7843842586659355`*^9, 3.7843852180422983`*^9, 
   3.78438640448674*^9, 3.7843905415606837`*^9, 3.7843906908836718`*^9, 
   3.7855130060988674`*^9, 3.785513069742812*^9, 3.7855137601827583`*^9, 
   3.7855139388043795`*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"fb681e28-86cf-4a87-bcee-63e9f1695525"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2 :", "Subtitle",
 CellChangeTimes->{{3.7843874485852566`*^9, 
  3.7843874569162345`*^9}},ExpressionUUID->"2a88d627-e517-49a7-bc27-\
a8ba83dd5fcd"],

Cell["\<\
Ahora vamos a representar tanto las velocidades como las alturas en funci\
\[OAcute]n del tiempo para k = 0.004 kg/m en color rojo y para k = 0.01 kg/m \
en verde.\
\>", "Text",
 CellChangeTimes->{{3.7843874700083504`*^9, 
  3.78438747748573*^9}},ExpressionUUID->"e286c56a-b776-418f-92e9-\
4f52f0547675"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"falturak1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<alturak1.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fvelocidadk1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<velocidadk1.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafalturak1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"falturak1", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<k1=0.004 kg/m\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafvelocidadk1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"fvelocidadk1", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<k1=0.004 kg/m\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"falturak2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<alturak2.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fvelocidadk2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<velocidadk2.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafalturak2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"falturak2", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<k2=0.01 kg/m\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grafvelocidadk2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"fvelocidadk2", ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<k2=0.01 kg/m\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"grafalturak1", ",", "grafalturak2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"grafvelocidadk1", ",", "grafvelocidadk2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7843875233492117`*^9, 3.784387601306744*^9}, {
  3.7843878935375166`*^9, 3.784387902760245*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"4259b693-c51e-44d1-be6b-fedd1fc5d6f0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJw93HVYFVsXBvDTBzEQsVBBsQu9dvseQcUuTEQFE1tR7O4u7G7EViwQpVQQ
6U7prtNBfiOz5vOf++yHy2Fiz/q9G2Ztq6UbZ60Q8Hg8mYTH+/df7t/lpR2f
t19yANWeipipS2dg0tEmMYqFF2jshGj7zI1dj15H5b41vlvdXXDF6JrZtTn3
6eub8Kp33y+iVY+xu/lru6xdW5Fw4Y9z2rZn9P/vgCFr8RTLoy+xs6hrP6OX
e/AxPH1B3oS39P0HMFYSWrRp2nuMyJh+9tqGQ6jp903Vz/4Dfd4RWC3bdKX7
vE/wmdhI0Ov4MbR6f6Z0tsMX+vwTEB180fKzow+GfQjZ9v3eKWzoP6ff9MW+
9PPOQKITOlgs+Y4vlkdLZn45h6rmTRMv9PWnn38BjrsOdenTNwC3f3R46+py
EW1Sq5+u7BNIx3MJk1ZZrBluHYRUQ/0PhO/qHXs9e/2g47uM5ZdvVXj1+Im2
fdM7Sw5eQQ+HRpELuv2i472KTkvtet7qHAyH5fWfiEs+gSY7rELo+K/DYkrZ
WbnFb9y8Uf8Pa8/28hK1CaXzuYm9gvSzH1r8QXKEzj7nyS1EJMzrzTMNo/O7
jUOHi28XNAyHuWhuE+v3d9DTMa1sjSSCzvcueIL11qd4kZjPfiC2TYpdPa4y
ks7/PjbU3ZsfsTMKU4acHOOUdx91dmVGE7RRdD0eILc4K+y8azRKZ/77xAco
23XqxZPyaLo+D+G0tuLFyTUxOL2uoMpT8RCfb7eIH5EfQ9frEfIja6x9nWPR
63hL5hQeIdrvyTfj9Fi6fo/hM1Byutv8OPx5MO6TquYxBgxpcadZbBxdzyfI
X/2j8s/UePy7Wq1FT+GVxn9hHxJP1/cpZv36/MHTJgHGiY82jTL2QEPTcMsI
3wS63h7Iqewk9x+ciOf/TrfpM8R8vdX30NtEuv7P8Oi9Sa5pzyRM+vdxLT1x
23Je802Pkuh+eEI1dHzw7XbJqL/c7Z5DH/dSeP1KMt2f5+g3YF6Uc5MU/Lt6
UR1f4KNdk4GVx1Lofr3A5/tXBznXpaCH4/lATfeX+NzoferV7al0/17iyioL
61sVqfjNfFqbvq8wysH9vw2r0uh+vsL12b9LTTLS4HKxbA8Gvcboqa4uB+am
0/19DbQd9dwvPB3MwTGn/AbZgvgv4WP/0v1+gzEbs24+//oXs5nJw9xSvBoq
mTe3fwbd/7d48ThHFfUsA4+Zq5f46C0q+zccedYkk+bDW4yKaOt2Y1Im1DVx
O4q6vsN+uw3dzx7NpPnxDn47Ji9w8c/E2PoJ8A7urpXGvaoyab68g/Uef1n8
oCwwN+/fCeHU4KyalZuyaP68x1uTu+Myn2eBPbz3iG4xpO2YvCyaT+9xYk3x
wZPtszGg/p8XGq5U7/FekE3zywthM86bRLtn47B/KDODvOA+WD0yKjyb5psX
GoQvMPoszUEsc/eZa4IeZzVbj47Jofn3AdE3Ko+O2J2DTvUf+AEDkm+OTv6Q
Q/PxA75bSR4uLs/Blvob8BGej9Z4/emWS/PzI9buV7t1cM5FkKY7c4c/Ivx6
RKnjzVyar5/w7L5V24OxuWjGHiBqC5qLzjbKo/n7Calnwp8fGJeH+qML+YRH
mzY2c9yXR/P5M0LGtBvd/nMe3t+p8Pg1+TM+9FL/F1qRR/P7M255tSh37J4P
Qf0Jf0Zb1zs7Ep3yab5/wYbBT2OH3cjHLHbCoLP7RMGR6Hya/1+w58Fd6acG
BXj473TjvmCk89f8yDEF9Dx443Ke18PonQVQ/vu4+d5oP+fm6K/vCuj58MbD
bfu/nSkqgM2/6Z/qjcmdXTuOtyqk58UHth/3byqYX4j66bvYB6WbvJ5vulBI
z48P4ka3issKLkTWrn83xAftR3lVDK8rpOfpK877n+XtGVyEfvUT/CvSbr5o
8GR9ET1fX+EYZ9Lk0+MiHLxiy0yZrwg78bXpm9Qiet58YXvtdfMLzYoR3bH+
BsNWmd9uwcRiev58URDo1Nv4QDGs/lX/Ml+MfdNy/KNPxfQ8foNLCn9957Ji
bP73eGz6hnUDzR+f7VRCz+c3BG2aVf53QQkC/t1d1Td43H4wrfWFEnpev+N7
kj542K8SNGUfSCTlTVhkW11Cz+93WF8/YDqofynqL5/hOwIszhY0cSml59kP
fmMdsqPulKL+8Pb4odQ0RrQ7tpSebz8880+b2bhBGVjN/WGR7xR2fHQZPe/+
CEux3V68pQzPfk1mnmh/2PxwmTPIs4yef3+4v3632uVvGWYwTyMzR5HpWvvp
sFk51QN/PHxlLTs+oRz6f/r88Edxv3ZGW/aWU33wh8r1iand+3Lcb/PvgQjA
Ut3DJcKCcqoXAXh2r1Tt0bYCE+pvcAAcSufHDZxRQfUjAKmffXnPj1RA7vHv
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
7Md6boBp1Ok5E34n+/0PwyuIlQ==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 1, 0]], 
         PointBox[CompressedData["
1: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
GQmlmnOrj/LErOfJmO0R8an0JE/Mep6Maa4/xLtdeWLW82QcdPw4TOPGE7Oe
J+PVy537d9/kiVnPk/FtUvRA6T2emPU8GXfCHxutecITs54nY9OcwGe/X/LE
rOfJGLlEcWzUe56Y9TwZ5n/afb3ixxOzniej3Yyi1eUBPDHreTJyS+ZsnPGD
J2Y9T8by4oZ493CemPU8GcJ2Ga8zo3li1vMUvIx8VT4giSdmPU9Bv+LxtzZk
8MSs5ymYomf25l4eT8x6noJuPz6OiC3hiVnPU+BfPKEnX8YTs56nwDLt4e7/
NDwx63kKTK77mZjX8sSs5ymQNJu2Y5uAL2Y9T8FGPVGX0835YtbzFLz+9nPo
rbZ8Met5ChYGL3jn1ZkvZj1PQYO11dM3Pfli1vMUXLP1aefdly9mPU9Bjapr
2evBfDHreQrGOc+d/GQ4X8x6noLtvVvyb4zhi1ngUhGe1n2S8wS+mPU8Ffe2
GUntp/LFrOepmHCyV8d5M/li1vNUDA529R40jy9mPU9F2QD8qlnIF7Oep2Kq
VLkiYjlfzHqeilgr23U3V/HFrOepcGwyP3+1DV/Mep4KPYd1eXp2fDHreSp+
/1pjnbSNL2Y9T8Xti9XLL+zii1nPU/Eltzx80gG+mPU8FVtNKgIKjvLFrOep
6Pbc29D1JF/Mep6KUUUlfYee44tZz9MwVWh+NfgSX8x6noZUC7dTK67xxazn
aYg7u16Xf5svZj1PQ9mVfRXbPfli1vM0NLE7aid/wheznqdBXzXY1vElX8x6
noYl+v0Lit7xxaznaQj6qS+1+sQXs56n4e2eX/vCvvDFrOdpsF8acXbUd76Y
9ZxpGyb3cw/li1nP0zAg4cZ0WThfzHqeBpP3PtI50XwxG67SsCw5Qf9OAl/M
ep6GiRYvUgpT+WLW8zSEuib0GZnNF7OepyN9v0DuWMAXs56nw7NTotnrUr6Y
9TwdHVZpx+VV8sWs5+nYNanVm85qvpj1PB38R77e4mq+mPU8HYP07k23a+CL
Wc/TMXP8+g1nRQIx63k6BDufdXrSQiBmPU9HgXm7ZV/aCsSs5+l4fN9k0J9O
AjHreTp6RYa5JHYXiFnP09GjZuWRdH2BmPU8HbfPXxBm9BeIWc+Z11+s108e
IhCznqdjdTOziL/DBWLW83Q003ZqFzhaIGY9z0B8S1nh83ECMet5BpMXHl52
aZJAzHqeAS//RZYOYoGY9TwDzw1bKE1nCcSs5xnIiJ8yqPc8gZj1PAMNZ85U
lpsLxKznzPtHHFriv1QgZj3PwNRB782PWgrErOdMu5kkf/IagZj1PAN/p5l0
0doIxKznGdC75pv9apNAzHqegRVdwuas2ioQs55n4M8R/vwmOwRi1nPm9U7q
0hd7BGLW8wxkDjA2mHtQIGY9z8TFlouFeUcFYtbzTGzKSDmy31kgZj3PRO98
6+tNXQRi1vNMuFo7mLmdF4hZzzNx+MINr85uAjHreSbKzWzvu18TiFnPMxGb
ajuhzW2BmPU8E+uEA/Y43ROIWc8z4eP53xLZQ4GY9TwTHaKbxK18KhCznmci
fvVUbcBLgZj1PBMOTddI9N4JxKznmVhtXDps3weBmA3PmTB8tH1KuJ9AzHqe
iQde21XdvwnErOeZ2Hxrx+L13wXkeRYsBtQue/pDQJ5nYXnRtYb8MAF5ngXb
hMDFvf8KyPMsuJ6pm78kRkCeZ6FmbFzFiQQBeZ6FTIdgk5cpAvI8C9f954+K
zBCQ51nYOV0WVZYjIM+zID9t2LNpoYA8z8LjJ2fb9SwVkOdZ6Gl/yNugQkCe
Z6HVVee60QoBeZ6FOen6WmONgDzPwn3e73tG1QLyPAv89w3yEfUC8jwbuyon
q/oJhLTes9Gibc2T9k2F5Hs2FG8/iKpbCGn9Z2Prj6xOmW2E5H02Aou1sd86
CCkeZMOuftf0G12E5H82givD1m/pIaT4kI2jRQ5GE/WFlA9ko/eOND9BPyHF
i2xsEp0s/zlQSPlBNoY6piScNhBS/MjGsGFLd2K4kPKFbBxW2nxXGgopnmRD
mHcg5NFYIeUP2SgRtTi8YLyQ4ks2ltieLJKZCCmfyIazyLKF21QhxZtsRE/Q
ZA+dLqT8Iht3ayMcAmcJKf5kw9pj3gezuULKN7LxzDL9bdICIcWjbHTtW2mz
epGQ8o9srB5RGZG2VEjxifn81XNkyy2ElI8w/TdhQ0S4lZDiVTZu3nhtY2It
pPwkG1nyC95PbIQUv7Lxsuv2zy02CilfycaAfp+ObLYXUjzLhsvRiOqQrULK
X7KhL+5p1MNRSPEtGyv0RUM37xJSPpOD6/1kKR/2Cine5WD3w+lzqg4IKb/J
gYt87c6JR4QU/3JwxPeV5Z7jQsp3cqB/8WzdC2chxcMcjOm4cl3qaSHlPzl4
43zMqck5IcXHHLiGrLQZdkFI+VAOklvM5y24LKR4mQPvMT7WdleFlB/lYNnX
8iNHrwspfuag5sDqVZduCSlfykG7c6uqb3sIKZ7moLq5qdWD+0LKn3IwYdOx
ww8fCim+5mBTUyvre0+ElE/loM/CccJrz4QUb3MwePb2LadfCim/ysG4uSuv
7XwjpPibg+lPlzhZegsp32LeX+gz2uSDkOJxDrquiPLq6iuk/CsHsnx+Zrm/
kOJzDvg3PFMlX4WUj+VgV0O9x4VAIcXrHHg07Om/LEhI+VkOcvRWOHT9IaT4
nYMvIzTH434KKV/LgY/lc4vzv4UUz3MwX++7ekqEkPK3HJhdvmQljRRSfM/F
nr4bz7jHCCmfy8XxqdcPjosXUrzPhZ2pg1F8opDyu1zoqeG3LUVI8T8Xr5SW
Al66kPK9XAzzaNb1UqaQPMjF76u3FV1zhJT/5SK536pbd/KE5EMuLt683axH
oZDywVw4nvQUXy0Wkhe5yD/iP6OpVEj5YS6OfB3ZYW+5kPzIRUzvBS8yK4WU
L+bC49jK1jMUQvKEaVt5mjxSCSl/zMW91I1GtRoh+ZIL196qqkVVQsonc7Fl
qtv5BzVC8iYXJi9PlJTWCSm/zEW/XS07j+KJyJ9cmJnvarVDIKJ8MxdV92uj
XopE5FEuztiW2WQ3FVH+mYvlnqeC2rcQkU+5yPRsVjmplYjy0Vz4vPUttWkj
Iq+Y/vgW+9G5nYjy01yEtbhrdr+DiPzKhUPSkk8fO4koX83FwhXGZaFdROQZ
c/0SZ0VMNxHlr3kwmXQgLLmHiHzLw9L5Sx1Se4kon83DI/tF+Yn6IvKO+fnH
V/9F9hFRfpuH13MeTPveT0T+5YGXbz/0zQAR5bt5CJyO3GuDRORhHubvXbNt
/xAR5b95GDei9teyoSLyMQ99ti1VDx8monyYef3JO6qG4SLyMg8B+i1+/h0p
ovw4D6L4+M03RonIzzysMTXKXjlGRPlyHpI/rhra3UhEnuZhh/DErBhjEeXP
eTB2SDA6PV5EvuZh8/5L2rETRZRP52Hi4syLGSYi8jYPNX81WqfJIsqv89D0
e4tx/aaKyN88ZE+bY/oVIsq381Cvnz1y0TQRecxcr52wNGu6iPLvPLi5ZB/c
MlNEPufB1tUrs3KWiPLxPMw6dKL7jjki8joPna3uD5Gaiig/z0P0wGGtbeaJ
yG/m/jOW/oyZL6J8PQ/Sn9NXTDETkef5uBXf/9tjcxF5no8bc3vrRItE5Hk+
hn22bmmzWESe5+PHitZKvyUi8jwf35os8mmxTESe5+Pa3MWmK5aLyPN8lN0b
9+neChF5no+FI4dUZVmIyPN8nOlq2ll/pYg8z8fM/pKmy61E5Hk+dmz0jnZZ
JSLP81GhxK5Pq0XkeT7enbsizVgjIs/zEf/fr8n8tSLyPB/bzgs39VknIs/z
8cjC3m6CjYg8z2f2p12mLVgvIs/zMeLbcKXVBhF5ztx/ecRRW1sReZ6PKau6
5NhvFJHn+VBPH6hvv0lEnucjN7vbmPV2IvI8Hx82t+lrYS8iz/MxZH2/otmb
ReR5PtpoHV1GbxGR5/mYwWzGu20Vkef5CJj43zIt02Y9z8ehoX9OxG4Tkef5
uJ7T3uX5dhF5no+x+zvbHXQQkedM/z6r6DvLUUSe5yM/yvdjqx0i8rwAd71O
9f/LtFnPCzBisMOWcztF5HkBhA3nLoh3icjzAnw4Wn5WwbRZzwuQjzdrPXeL
yPMCmJ7PaD9nj4g8L8AT9ZW7JUyb9bwAcbYZApe9IvK8AO8CY2f02Scizwsw
c/TJtT5Mm/W8AOfu8FaI94vIc+bzw6yG/GbarOcFSLzyKG7BARF5XoDZ3wqt
/jBt1vMCzNs0LmDmQRF5XoC5Tz2r/Zk263kBvuYadjI4JCLPC9DLWdX0KtNm
PS9Aq/NVCRqmzXpegOGi+SdWHBaR5wUQlymbvGfarOcFaFdav6npERF5XoAD
qr2PVzBt1vMCrH+5/utDps16XoDMeX/fFjFt1vMCyLcFHjU4KiLPCyDxnGJg
y7RZzwvgFLz47R2mzXpegJMifvsIps16XoD21xeb6Zg263kBrnqYbupzTESe
F+LK+FKraUyb9bwQ18+aDLNm2qznhZhUPzlpL9NmPS+EgbfK+izTZj0vxH8r
NgRfZ9qs54Vo/9yVf59ps54X4subrXoPmTbrOfP7dk07eTJt1vNCTEtfVXCT
abOeF0Jtu839PNNmPS9EH5uJ+oeYNut5IfZPCHXewLRZzwsRUt3hxxymzXpe
CNdfA3IGM23W80Ls9K1L4TFt1vNCVNx48jaB6Q/W80LsmaC/1otps54XYkPP
7VJHps16XghlL4+lxkyb9bwQm368uak+wnleiNJ5r/28j3CeF+Jyxf0Pm45w
nhdi8f1L57sd4TwvhLH8JEIOc54z/TXuXNTmw5znhfD9+nxSq8Oc54UoOlF+
8tkhzvNCzLiw4fnUQ5znhXDM7/oi+iDneSH4xZ3OrDnIeV6ItW/sUXCA87wI
VYr+CXYHOM+L0D1p8ZyC/ZznRegWJryxZj/neRG6zJwbFL2P87wIU3eO+T11
H+d5Ee4ejX7zbC/neRHGVho5ttrLeV6Eipqdbbbs4Twvwstzd86G7OY8L8Kw
kcHZ3XZznhdhgGFdF7tdnOdFMD+01uD9Ts7zIoz7VN9Ns4PzvAirM2T5xjs4
z5nrk82/vMOR87wIxvOHdHvqwHlehEuP7xxJ3M55XoRbbwMk/O2c50VwTHmR
PWQb53kRxk88kGW6lfO8CNWl07/ZbuE8Z+7n68D9hzdznhdhyoEJ7S/ac54X
wUV92+W2Hed5EcTtN2U82MR5XoR+Xp87PN7IeV6ExOL3Ax/Ycp4XQd5te9db
GzjPi5C3r2WR63rO8yIMUTy/ccCG87wIHRLtB9ms4zwvhsZhi/vMtZznxWjV
ISq7vzXneTGO2Pu3qV3NeV4MmxjTntGrOM+LEWDxuKmnFed5Mc6vlcbar+Q8
L4Z37czjIyw5z4uhmpfQqnwF53kxDNoGHXi2nPO8GOVBI3+uXsZ5zrTPzVS1
Xsp5XgyfK0OF/os5z4vxfXUT5ZpFnOfFOLiP96PenPO8GOODZ+y7Y8Z5Xoz5
h3UtRi/gPC9GYb7p8eB5nOfFMJm+NtF8Lud5MWZfsmuXOIfzvBhDv134z3I2
53kxQiJrhiTM5DwvhmBnTjOzGZznzPUu3xoumcZ5XoybLr8cR4g5z4th2WOQ
7vpUzvNi3Nb/sKFqMud5MfLePvSxmMR5XowP6FfgPZHzvBh7FOtrRBM4z4tx
6PYt9dJxnOfF6NVMFXfPiPO8GGe2P7+RO4bzvASZK0qm9B/NeV6CMXWlv1cb
cp6X4N70HJOrIzjPS1DTXXAleBjneQnEwc4R5UM5z0tglH27vJMB53kJbm07
pjIazHlegq4d7HMWDeQ8L8HiqEsf7fpznpcgmzfM4WBfzvMSjF27r+2Z3pzn
Jfj8+OX1i3qc5yWIHi8QufXkPC9BgJH/yovdOc9LIGnV/ObprpznJVAbj/x2
oDPneQmOD7f7vakj53kJ1u6QBS5sz3leggupze6Nbct5XgKpUrqhY2vO8xLM
U6d1KmvBeV6Cg926vfnejPO8BP2UGYZuTTjPmf4+sPOulZDzvATmtzsq+/A5
z0tQ/ERolF3P7c9LMPTambUetdz+vASWjll7F1dz+3Pm/TIX7RfouP15CXIU
fWzfqrn9eQnutroyebmS25+Xok9JCU8r4/bnpXBROr53r+D256X4qdhsPqyM
25+XItC6T3JACbc/L8WCd0nm84u4/Xkp5nxM9YnL5/bnpVhzb6fIIpfbn5di
tKJgRkIWtz8vxeqrTjvNM7j9eSkcPl26GJzK7c9LEa2wvDU6mdufl0J+bthV
jwRuf16KIcFLDvPiuP15Kb6Y9Fq2Lprbn5ci8U6s3te/3P68FPdyfia0/8Pt
z5nXb5p93CaM25+X4kSSZ483odz+vBSn7w7wUgZz+/NSjOzcr7/xdyF5XoqZ
y0vcdgYIyfNSXN73V/78i5A8L4XfjT6z0vyE5Dlzv8PHnG/+SUiel6JzU8sf
o3yE5HkptszLly19JyTPS+GfNKzDrtdC8rwU+045Dzr/QkielyJz3NSRnk+F
5Hkppg36OOztYyF5zoxfgUlv/wdC8lyK85uGNg24JyTPpXhcnpj37Y6QPJei
zU4PP7+bQvJcCsnUKKc314TkuRQuoojp968IyXMpJneXVp+7JCTPpXh0/MzL
HeeF5LkU1qZVi5ecFZLnUnQ9cV8+8rSQPJfCKj/mXFNnIXkuxQMTWc+UY0Ly
XApb2XKvp4eF5LkUNbHrhjoeEJLnUrxv5vhszF4heS5FWKusPvKdQvJciv0f
27m/dBCS51IkZ67jr90qJM+lqJaM2drWXkieMz+fXBjtbyskz6XYeDV9jLWN
kDxn7n/5/iv1a4TkuRTNB/Qov20lJM+leFY5cPYoCyF5LkXP5vV3g5YKyXMp
qr43V5gtEpLnUqQ6vJiVsEBInkuxIHDmLYu5QvJcihedppXGzxKS51Js/SOc
bDZdSJ5LEb1YdfH7VCF5LkXfrwezR04SkudleNCrZuyt8dz37WVYczPnbO1Y
7vv2Mux/dD1r1Sju+/YyVPqfmOA7nPu+vQxf37a+1moo9317GYKaPVGsGsR9
316G3Dnvlz3rx33fXoaYlw++lP//+3bm82wzBhr25L5vL0N3/3j3rV2579vL
8Hqistnjjtz37WW4mf7UKaEt9317GczL1vCFrbjv28uwePUZl2HNuO/by1Ce
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
aha68b1Dqqg+Q4GqL339fH2qqD5HAWvr1mEfH1ZRfRZzPy/qjV+6cfV5CuR+
fSy4ebyK6jkUePLxmeFhhyqq51GA18k/cMWaKqrnYq5/hfP7oQu4ej4Ferz5
2EJlUkX1HwoI5tSFfRpaRfU/CvzyaSV36F5F9V8KbI26dLJPM67+jxmP8+Od
f6m5+kkFLu77VLEpX0f1QgqcvPQ1vC5WR/ViCjitr+p2IUhH9YIKdJL3S+7g
raP6EgWCJhS3vnxfR/VFChicrfcTXtRRfZkC3y92T3M8rKP6QgUSLKT74zZz
9ZoKZFz7z22kpY48V2Dw0vODnGbryHMFah8ET/xjpCPPFVi74Gxk6wE68lyB
dx/cCmZ10JHnzPx84n5iX4OWPFegbYXpw/vlWvJcge5r7OcGpmnJcwWafX9x
KOG3ljxXIPha6Lh8Py15zoyv/b7jpV5a8pzpjy17VxS7a8lzBXrtPxKQ4cTV
1yqwV2+2b7ijljxXoLPppenv1mjJc2a+urSzPT9fS54rcN7ARW/tRC15rsA2
/3fb/xuiJc8VcM6fs7K8s5Y8V2DKvNY5zwRa8pzpn3FfmlrJNOS5AlnNOkQI
MzXkuQIzW0aO8fqjIc8VmDj//eSpnzXkOfP7Qw5JI59qyHMFVtYViS2uachz
JTzPfp2a5KQhz5W4Oc630NxRQ54rsbDzLZPA1RryXIlbUwdMHjRPQ54rMTO2
R/nJ8RryXImBZVMWpg7UkOdK5DZfamvQUUOeKzFZ3WukQ4OaPFfiZ8bqt6/K
1OS5EricXJidoibPleDPXp7S5peaPFfiw7EbLmM+qslzJXz2rleaP1ST50oc
aXas94ZLavJcie073rV0PKwmz5UIvxvweZe9mjxXIuWA4wiH5WryXAmF+Lyd
zXQ1ea5EH3nK5gWGavJciWd7+48z1FOT50p49RwR2aKFmjxXosOFkLHpahV5
roQq9K3901wVea7Els5+DvZRKvJciZFjn8/p/01FniuxxmGeOu65ijxX4t7o
LQePXleR50x/GsQk9HZWkedKFLWb39rfgavPV2LTo8e9565SkedKdLv7tG3s
HBV5rsSF7v0ylxipyHPmek5mXfrTV0WeM+Ope9t/chsVea7Ey6urPZ5UKclz
JXr19q0WFSrJcyVKQ12nr4lVkudKvPZ6tudNoJI8Z+bXrfSr6pdK8px5XU/d
feObSvJcibtNwu9sP6kkz5n5cabf2XuO3N9TUGJoUpR96Colea7Ek7gnUwuY
cWI9VyK16c5Wdcw8YD1XImZV05jWfZXkuRKP24y70rm1kjxXYrNFjFlnnYI8
V8Jg4MvmrfMV5LkSAYHuITVRCvKcud/gdSfyvirIcyXG/s4ThzBxifVcCY1D
ZVMPJu6xnivRtO3K+C3HFeS5EsumKV+O2cr9/QslnDe4X1AwLrCeM/NT0vrw
y+kK8lwJ33dGB6xGKshzJRouZZ8W9FSQ50x/+xV4PWqiIM+V6H66R6qJXE6e
K9GVv2Tgn3Q5ea6CdeHGM0vD5OS5CpsrhwniP8jJcxVCBx+6vcBTTp6rkKQZ
Yh7gKifPVWgS3rr/4H1y8lwFzy+8bi423N8rUaHN2LSR2Qvk5LkKrnV7to6e
ICfPVThyyivy0AA5ea5CtXy21TdmX8B6rsLSdaPba5h9B+u5Cj5zpyqGMPsa
1nMVphnMESxh9k2s5yoY7Bs0fc9XGXmugn2bjx8uPZWR5yr06P7X8uEVGXmu
gvn3eWNfH5GR5yq0yG42652djDxXYcHirMsvl8jIc2YdmL3pcp/Z57Oeq9CS
tyD5nIGMPFfBZvGtlO2dZOS5CsE308Zdq60kz1XQ7F2MKbGV5DnTXz3nRyc+
qyTPVeg5zrl83dFK8lyFoAPed9KWVJLnKrTa5JY226CSPFfh/pP0D4/qKshz
FTLsFg2pjK0gz1Xo7v5s4vDnFeQ5E0da3K9YebSCPFch3kk298CSCvJcBcuE
VQtdhlSQ5yqc2HJP4FJbTp6rcNFit93+mHLyXIUrlz2cLJ+Wk+cqfEuOX/bf
4XLyXIVbyMwvW1hOnjPjZbLf+MFA7u8PqTDy9Np5M6vKyHMVlO8shqT8LSPP
Vfgp7Btt/aiMPFdhed5B04R9ZeQ5Mx5bBl+bPL+MPFdh7Jsi32t9yshzFc7e
Pv4xQyklz1UwjfJ26xYmJc+Z+7WYunD6XSl5zvSPiVS5ZoeUPFeh6/LDzltm
SslzZj04+9TbdZeS5ypMaLF824qyUvJchc9fhkQZfy8lz1UIuVD5X9NrpeQ5
E/czd578ZVdKnjP9NXpP+sFJpeS5Ckbp3ybqtyslz1UobtfR831uCXnOXO8s
k/bjfUvIcxX6hdW6vTlXQp6r8P5730Fd1pSQ5yrwgrZHbx9VQp6rseXhqxt+
whLyXA3Rr0eHFYnF5LkaH3f3Otn7ZTF5rsbRb5nek44Wk+dqjHb/1HzeomLy
XA3BqM2X5g4oJs/VaH04ZJaJpog8V6Nt10tj9H4XkedqdLztblnpUUSeq2Hb
7v7XDw5F5Lkadw4dWLt5WhF5zrj6uXxO+85F5Lka2R1/H3heWEieqzGxa6J6
9OdC8lyN53uyg1+fLyTP1cgVfMzrbl1InqvhPEt/9b5RheS5GlX3ig1DBYXk
uRp5brnrmyQUkOdqRCxJ1o17VkCeM3lBzA31yoMF5LkasRulqx3mF5DnavRR
Ph6zR7+APFfjterioa2V+eS5Gsf8909YFpRPnqvRaoDhjpHu+eQ5c71S50HV
tvnkuRoTTk1b7TcunzxnrufnxO6bmueT52pcem+ypmlqHnmuxp+znQxvveL+
fp0aj7e7X+l1NI88V2PRMtezbuZ55DlzvU6/umn75JHnTP+N7DVjoTyXPFdj
yOLlbW8H55LnzPgPmH003j2XPFdjfVaAO39jLnnOjL/ZxeV9x+WS58zry0/9
HNUslzxXo4XL3tIxyTnkuRrBDqNCB7/IIc/VOGh6xqr1oRzyXI3IGNO3efNy
yHM1ZqpNf7zulUOeq/HK3fKBXVk2ea7GjIFzZ3cOyCbPmf63LfvsczGbPFcj
37Jzw3TrbPJcDdfAqz1CR2aT52osa7qn5676LPJcjVPL/b9O8cwiz9VY3XCj
dzmyyHM1lJkf553IziTP1Qjs4jdHeyKTPFfDKHS6/pJ+meQ50x/L62LdgjLI
cyZv3X1hxwebDPJcjSvTr9d95meQ58x4Tw90evIwnTxn7rf/G9HuaenkuRrf
E5tdGpSTRp5r4Dt476BvJ9LIcw16N/OIHdc3jTzXYFZVn3vXJankOZPnt3p1
Idk6lTzXIGN/7vOGuhTyXANTs+1VLe+lkOfMPmOp4nT1pBTyXIPojO4rIlOT
yXMNnji47DxzMJk818D2QUFW/+7J5LkG3Z1Snz/2TSLPNYjo3Sa++fIk8lyD
4r8DNy9RJpLnGowd+tvxxJVE8lyDrqcfVl41TCTPNbhTuUx27m8Cea7B0ADX
gxu3JpDnzPtFll4d1CKBPNcAB/Vmhj+NJ881mBD+89rSmfHkuQYeq69cCMqJ
I8+Z+zs1YGzn43HkuQbimwPd5uvFkecavB85+ZXd51jyXAPDlR0u2K+IJc81
CB4438RcGUOeazBm+JWA7m7c31fV4L/xrvphw2PIcw0638mwWf07mjxnrkdv
zNWEjdHkuQbhESN9xwqiyXMNbuSrXpZPjiLPNUjV2185ZW8kea7BLusxcy3f
/CXPNZjaZ/evyQUR5LkGyTZnDkr1IshzZr7c9XewXfaHPNfgZfQK32fnw8lz
DQZGvVr7KZj7+7UaDLkjOnSxKow81+D+nledR40KI881sIsvm3pv0y/yXINt
tR2bJ9z9SZ5rcNvQ/nhSbCh5rsG1KeM/PmkeSp5rELXw96fJU3+Q5xoc0LN3
99wdQp5rELhyzeq/z4PJcw1SXGV9fmYEkecaTEnZUn6uYxB5zlx/WKf47nO+
k+fMfLpr+7NAE0iea7AqvdeyUWsDyHPm+gamOnb49ZU8Z/p35LAJ50Z+Ic+Z
ffChO39uXvcnz5n5vua96ZRaX/Jcg516VX8Prv9EnmugfF510CzsA3mugVHa
xK3+I3zIcw1GO+L7l6ve5LkGnsLehi8q3pDnGkS2t+zT2u8lea7FY7fRl+4f
e0aea1F597X/ullPyHMtTPPD0pa0ekiea3GgfbPNpQ88yHMtXpi8bbg89Dp5
rkWYfUXpCJuL5LkW/UffPtuw9QR5rsXfLhNt3t5dRZ5rMVa26I1e+90S1nMt
Ft7sVyY9c0bCeq5FzxgzntOPKxLWcy0y4yZHD5lzS8J6rkWQeZeyzX/uS1jP
tfBa1HL74+ePJKznWgwUo/3aMi8J67kW00wjHxWNeiFhPddihHNW0eR9ryWs
58znDb//yPrbOwnruRZ5a/XmP3V6L2E91+L4Kdn0k4M+SFjPtdjefVPPn78/
SljPtci37vHBwcFXwnquRZPlzyuOdPKXsJ5rsXmNz1uZ/2cJ67kWvsNT439b
f5WwnmvRcXTQ9OZNAiSs51qYz2yb+upVoIT1XIt17mOnWg39LmE912JJw5cm
Heq+S1jPtXiydqdRdXSQhPVciwEuI7928QqWsJ4z/WH423XDwRAJ6znT/349
ruWZ/ZCwnmuRfkz363r/UAnruRYrvcTdDmlDJaznWhTN/bvLLeKnhPVcCxOv
Q3+SH/6SsJ5r4dRicMel+8MkrOdaPF3+ZnzDgt8S1nMtXD1kwzP6h0tYz7Vo
WR6VW6YLl7CeazFZMGLeyKg/EtZzLeR9Spc+9IqQsJ5rUREglc068lfCev7v
e7WuHfWWRkpYz5n+2r3w+YD/oiSs51p02IElb3nREtZzLbz3/jy8YVu0hPVc
izrFqLmjk6MlrOdaiOpUPt1mxkhYz7X4mODyvqt3jIT1XItxG9dNGakXK2E9
12Kpmdrc+myshPVci5eXAzOfqmIlrOfM/ewxKmhmEydhPdciNCrKyulvnIT1
XIte81pO6GQSL2E912JvzJq9AU/jJaznTH9un9XqRKcECeu5FmbbJiusTiRI
2MvTYr2xpL95eYKE9VyLwpK511daJUpYz3UwWWw1/eivRAnruQ69Djr0/2yU
JGE918Hrk2hkm0dJEjYg6DCMf2/NwXbJEtZzHab/9n1RdyRZwnquQxf7uJZ3
SpMlrOc6OMp3HzS3TJGwnuswYUHPip4/UySs5zqMksy1aRibKmE918F33uk/
NQ9TJaznOqy/vnhQ+/ZpEtZzHYZeGGs3+ViahPVch3Xrvc+dKEuTsJ7rMPaV
+el0q3QJ67kOxRHXlyz6nS5hPdchbESb0rTxGRLWcx1k7lNmHn+aIWE91yGr
lfdKky6ZEtZzHUr5lf3bnMqUsJ7rYJd76pZWkSlhPdfh5ME6nyqbLAnrOXN9
fQu2dIrJkrCe68Cztl3dv2+2hPVch86DPcJ/WmRLWM91aN/Kunbf5WwJ67kO
UQJ1+Zhf2RLWcx1GCJ97VNdnS1jPdZBckvAjx+VIWM91eH3llN4bhxwJ67kO
B6aKi28+zZGwnutgs2yyzaXMHAnruQ7ja4NPunXNlbCe6zDYq/eC++a5EtZz
pr+G3PH1O5MrYT3XoX8bJ0l6YK6E9VyHwxm9N7TR5kpYz3U4FSO5N9cwT8J6
roP1ee+tV+zyJKznOpxWTvmd75knYT3XYdzxTz4zkvMkrOfM9bTZOPBt+3wJ
6znT/wV3eg6cmy9hPdeh41evK15O+RLWcx3Ez+NPj/mSL2E912HzmP3KcEW+
hPVch/2XMhIdhhVIWM+Z6+tsOby3bYGE9Zz5vDPjZcl3CySs5zosO/C3t2dC
gYT1XIe7x7d+3NG2UMJ6rkOl0PaN2ZxCCeu5DpZuLZqOO1EoYT3XIXbtuy9D
PxdKWM91+KB8/stAUShhPdehndW8oWOHFUlYz3X4PKI4zdS2SMJ6rkPb3Ulp
m+8VSVjPdbi3ePugG4lFEtZzHba35H36265Ywnquw4qvBWfazy2WsJ7rsGD5
3pvWzsUS1nMdHrZrmuf3tVjCeq5DkKpyo566WMJ6XgWp1FXvwsgSCet5FZr2
GCVsZl8iYT2vwq2VE7pefFgiYT2vwtMndYt7p5VIWM+rYN051edL51IJ63kV
vBcaGK83L5WwnldhtuuMhM5nSyWs51WwtHG5HBtUKmE9r0J6/cJ1HjWl5HkV
fCZXz3A0lpLnVfiqyh1n7iglz6uwtKe98YQXUvK8Co+PFk0akSclz5mfN/8+
e4R+GXleBdvSRUsmWJSR51WYeKfKyvxKGXlehYU2Pdc4/ikjz5nrV3Ra7tGk
nDyvwqBLcxCLcvK8CvyMrt07Hyonz6twZkJ+2rqP5eR5FQbqd3Txrygnz6uY
fa2oa6+hFeQ5c30p+qfPbqggz6sgiAuJ5t2vIM+rMC7ASn0yuYI8r8IU7ZzK
Dp0qyXPm9W7yLy/NKsnzKnTMDFhmfraSPK+CYYvOn2uDK8nzKlxesyr/U10l
eV6FtsuPlUzWk5HnVZjQ/534yUQZeV6FEJ5G3d5CRp5XQWXk0uzkHhl5XoWy
9bd2V1+RkedVqIxcM2H/O5nkf3z/LJ8=
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.599}, {-0.402910312215, 2.92789043795}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"k1=0.004 kg/m\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"k2=0.01 kg/m\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7843905458464746`*^9, 3.784390692585466*^9, 
  3.785513009298662*^9, 3.785513074743493*^9, 3.7855137636295395`*^9, 
  3.785513940816253*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"e2edd211-64e9-434e-851e-2674a17874a3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJw013VYk18fBnC6GzYGDLAbFRX1Z92zO8AubMXubuzE7lZELMQWYwMFQZCW
7m7WG+k7Od+Xf7y4Ns9znhP356b14vVey3S0tLQEBlpa//79/49T2va/F2Wu
gsZASeLExVNwdWNIaufS//++ELPfRR0LzXAV1O9b9WXLRR908XliMTf2/59v
QNKu2auVoa6C3XYvR+fv2oK/n/JuXXz3/+/vwHzp0Ae9Al0FO8s7uBs934OD
MQd3Jd36//8/gAa+f7tt51wFA3Mnn7m6zhfjBgXfdTz8//EOI7PX8wrRdldB
yFgzna7HjoLjcUtv5er/j38cEzoer7JZ4Cr4723ktm93TyLWYfv9b17/f95p
pMRsaLNmlKvgo8uRSs+PZ3Fx1t51TgP+//xz6ObmfzjGzVVw60erV5t8zuNp
mGTJ/tb/n88FtDVfY9qH4yrIrGt5II4vdNlVYfT/+V1C/EeboAeNLgKnHtnt
DA5eRrrDtMB5Yhea7xVszq1ewStyEcxZ2jIiVp2vLP+T6kLzv4Y9A2d3vxzt
IrhxveUHM9cO7zND6ELvcwOXl3+o571xEaTHqqYW+t9EwvKwA9mPXej9buGK
+6bwhzdcBA56MyzcXt/GjOV/fq4+60LvewcndtQf9fB1EcxiA+LCKbG29jYX
ev97EG362S92pYtgQr8TQxcW38Nibb+Ot+e70Hrcx7uQmfFrPV0EVZ7/RryP
sp293AUjXWh9HqDdpp5j7f5zEZxaU9oQKHmA7a+X2Fd0c6H1egi1JPtGaCsX
QddjXM0rPMTD2uDEG3YutH6PsOaK9OtWIxdB9P2R72VNj9D34Ju5Xo3OtJ7+
yBtn9Kyn2Fnwb7V4eo8xxEb/mVWRM63vYxglfpsjTXUWmKQ+3DDYJADNs8Z9
+hPtTOsdgMj2X8NDhM6Cp/9e1+oJdAe67b//xpnW/wlG/nxVdCLAWTDu33Dc
QHD2eis233Sm/QhE5YWJrxb4OQtalpv/FANXX7abeMiZ9ucpVlZNbD1ou7Pg
3+rFt3mG2Gl+f7qtdqb9eoYX3zb1dF3gLOg8zy9M0ek5PKus3G2nOtP+PUfl
7kMpRqOdBVGa0Rx7vID/kiJXrYHOtJ8vcFMy0ayuu7PA53z1Hni8RFF0xg1Z
G2fa35fYN+bxr1qus0AzOc0rB2HV1+gb1SbOtN9BuKG3wqS6mS+Ypjk8mi1F
ze5LvBopn/b/FYamb/ghLuELHmlWL/XhKyzs4mCuyODTeXgFyz9PJfWxfIG8
KXlHeYdg6H4fvlHnO5/ORzAKF+mcMv3AF4xoOQDBmCPTG8J9xqfzEgyFaNWJ
Nnf5As3m/XshDLWbuqbnRT6dn9f4GpJdjGN8AZvea2Sld1FM2c2n8/QaJrVz
ri9Zzxf0bvl5g3sNZxO2L+HT+XoDyayyW2dm8gWHRL80J+gNJi08Xv9oPJ/O
2xsU3Tlf/hV8QZJm9zVrAqlzh5Vpvfl0/t7iRpjPDnlHvqBty4Bv0XR7D9eG
z6fz+BYdNh4Z5m7FF2xu2YB3cOwc0OCpx6fz+Q6ZOfpDt6idBN8VnTQ7/A7z
ekRYX6tyovP6HjtXmK/9mucksGETBH+PlldRshOd3/cwuRIuNItyErTMLvI9
zF/7vuv71YnO8wcUt/PutTjYSfD6dm1AxPgPGCLb5+Hn70Tn+wPCW5t9+3rd
SaDT8sIfYL3MLbr6jBOd9494f9tknquvk8CLHRj07xmz3mubE53/j3A6eEP/
2ConwYN/r5v8EXGP7vC/ejvRffgEUab2W7mXk0D6b7hZnzCCW/PLbbQT3Y9P
eDPizEKfgU6CYf+Of+YnzAky3vKohxPdlxBsmnRWr6Ctk6Dl+HqHoI/jKOvW
PCe6PyGIWzzv+iIzJ0H+rn8bEoKFnZpuPtRyovv0GfVXpvFK5Y4C95YD/hnB
Bn7m3cod6X59xtGp6bs2ZTsKDl4erjkyn7E6e+GCkARHum9fMCfNK0Q3wlGQ
0KZlg9FrWvbJSSGOdP++IPp09/gbLx0Frf+lf/UXNJVvOVH2wJHu41ecnpn7
rt9VR8HGf9djw1f0dbg97fgpR7qfX/HsV/bSjP2OgtB/uyv7iuu9E4rdtjjS
ff2Gu3cDUnx9HAVW7EJixtHzfdPnOdL9/YahliI9d09HQcvy1X2D1Hip4ORI
R7rPQiTtDCor+s9R0DK9PULMM0luFHR3pPsthOqb7p47bRwFTHMRZA82Lmvi
OtJ9F+GN9ZSP800dBU8ixmtutAhbbyRuFv51oPsvwr573a62kTsIpmhuo+aM
Qsf0QutjZQ6UByL0qu5rU53lIFD/0+eHCN1zJvtMS3CgfBDB7r5126/hDoJ7
jv8uRCjkU4KHdgxxoLwIRdLppd8vvHQQjGnZ4FC8kS0M+PvAgfIjFMefZFWt
veogEAf8m2AoBnewuJh9yoHyJBTvbbtdn3TAQXDt3+x+hSLq5tpm0RYHypdQ
TCo3Duuz0kHw73CNNQuDybP+hYHzHShvwvDOtteiVl4Ogn9pkjgxDMYzug+8
NsqB8icMbxqXbbAe6CD4d1o0RwaeXBut0z0cKI/CcDh4dblhOwdBy+vGhyFr
4fOuR3gOlE9hyLawiNA1dxC0DGfzHfrNvz4c0nagvPqOuA3OWvpKnqAljqZ+
x0ttwZ1jFTzKr++o77DuvGkuT8Dqw3fYdC1MO5fEozz7jmmzMjbbR/IELXGQ
qvl+t3OL7n7hUb5pPt8uuN8pmCfY3xI4P3DJvFOvN/48yrsfKA8/ZIsbPEHH
lgv0A7tjz42IOcuj/PuBNQdP/5hziCeIa6kXPxD35e2Fiu08ysMf+Og9+uXu
NTzB9n/XIfsHWrU+xLVYxKN8/AGrAY9/3Z/OE7j+O84u4djxuTaq7zge5WU4
hljetf09hCf4+e/4LQzHuLuyx0t78yg/w7HVze1QU0eeYH1LQIbjWsCpgKt8
HuVpODakTrbtbc0T2Ldc+HDE6ISEx+nzKF8jMGu76be19faClum1i0BclyMN
ZrX2lLcRSAnz2fui0F6wvOUnAjbFqmGT0+wpfyNgYbt1vDTGXvCvPGkSFivG
tblyJdSe8jgC9/sPazPovb3gXzruKI9AP0tebcFTe8rnn/BPKmk4edde4N0y
4E/MspSO7nPJnvL6J9493JuYc9xeYNASUD/RatPvGyf32lN+/0RNbvt7/TbZ
C/7tht3Ln1i/Lzq/eLk95flPFC3WXXB5rr2gpd3V/sTFbTb2o6bYU75H4qXX
EGP1CHtB87/r5h6JxV9i+jz7z57yPhL5E3SvL+huL3j87zhvisQQ/04enLb2
lP+RuDTgkFGMvb1gEnthNBycbXPYzJ48iMQ6tdRzsLa9QPlvOxSRkIZdiVAp
uORDFPacPL3+TQVXcOff6/aLgp7aacKGXC55EYUN/c/M7Z7MFYxqWcAo3I7v
dLs6kkt+RGHJxn5WL79yBTUtPEThkkr77frXXPIkClprEo71CuAKrvyL94Yo
LJtbe1J5k0u+/MJBL/8vn89xBS3xPPgXtM8O5vse4ZI3v3DJRSdw7C6uoCVe
9/1CxrXBi23Wc8mfX9h6fsDorCVcAYu/X1C3GjEzYBaXPPoF2QL/85sncgUt
8aITjSLuU4VgGJd8isb097d9LftxBS3Xd3g03p6M6ZfblUteRWPLW1+7V624
gpbrcSQaDalmPF8Ol/yKxsvrH4ZON+EK2PGLRqki7lznvxzyLBqyNQ/1/so4
gj//ttcoBp067r/1p4xDvsXg67TgmS+yOYK9LQEYA/nvYx5HEznkXQwMv0/x
WPiTI2jfcgBj0PrLnBkDv3DIvxisvC6/ah/MEfyOafmB1sC1dXJ/DnkYgyY9
u11JNziCrS2B+htb5vZ3eOPHIR9/Y2N955SLhzkC55YD/RsyRf9XW3dyyMvf
UJ9593jWOo4gvOXPq9/Y1l38cdASDvn5GwvW/1fSehZHsLYloH/jpqDAzWgi
hzz9DaOKgX61QzmClriyi8Uu02vGaX055Gss4qpG3wrtyhG0xMGMWMQE3x71
vBWHvI3FAK9Kw2scjoD9+RWLP2MP5R424ZC/sZgq+Biz6a+dwIxdOKzMzopd
JLcjj2MhnDCi2LPcTtByXBzjoCweajk8x458jsPzbp0neCTZCVq2Y14cdsRP
vNkp0o68jkOhnl4j/6udgP15FofdCXfX2ry2I7/jEH55a61RgJ2gZbjcOPRY
lHFA65YdeR6PAcI2revO2dF9j8fkyodx0iN25Hs8/kx4c6p6lx3d/3i4bX88
rXy9HXkfj9edkzqXLLWjPIjHmwA/k6LZduR/PPYb9VIWTLKjfIjHws9WVQXD
7agPxOPSMd/Kwv52lBfx8FqYIyt2s6N+EI/oc7v1ytvYUX7Eo59ZML/a3o76
Qjye16UMlJrZUZ7EY/ajEYvU2nbUHzTvs8Dr9F+lLeVLPB56zvpiWGVLfSIB
K2Jfiq3ybSlvEnAt7WUnpxRb6hcJGOQUvKRDtC3lTwLGh1vc7yWypb6RgE/u
rfM0JYDyKEHj09BWk57aUv9IwPK1vxbOv2tL+ZSAdfV299desqU+kqC5H7vz
9p2wpbxKQMf0WS7n99lSP0nAHr7hnEebbSm/EtBlW/6Fjz621FcS0HBvWOTv
+baUZwl4bHi0rtDLlvpLAsrKDDo0jLalfEuAT+/WE20H21KfSUTa3p7ruvWy
pbxLRGbBueOjOtpSv0mEReCdm4v4tpR/iTBc//7xXmtb6juJmB/QJ/CGgS3l
YSJujNn24GODDfWfRIwdm3Y+VWxD+ZiIorYft6mKbagPJaLEa/MUXqYN5WUi
oqascBkQb0P9KBFaYknuvHAbys9ElL7eeOlAiA31pUTUrB4x0D/IhvI0Eeui
IpN+PbKh/pSIbzvnz5dct6F8TYL7zEWpPD8b6lNJ4Pr0Hjr0sA3lbRKCTHrf
WLXThvpVEobeFuZfWmdD+ZsE06f97UVLbKhvJaH/6ub/qmbZUB4nQfvqhrEO
k2yofyXh/IraEaOH21A+J8FkfWbXbf1tqI8l4RQuN/m72VBeJ8Ht+95PKW1s
qJ8lQb9I4W3Es6H8TkKHj97VA8xtqK8l4doLh6XrdGwoz5Mw8+TxsAcqa+pv
SVhZZmaUVmVN+Z6MqDNGfSwKrKnPJWOxOHvkyFRryvtktJ1TO2hvjDX1u2T8
LbvDex9qTfmfjN9hk9Nq31tT30vGxhNLd3d5bk0eJOPrWYH28vvW1P+S4Xdv
1MoHV6zJh2Q8u5TxOveUNfXBZOR9WZDtfNCavEhGleOAsnnbrKkfJuPc4d+J
t1Zbkx/JODB1363shdbUF5Ox/cSrEa4zrMmTZDjpRf1aNN6a+mMynJ27dfcX
WJMvf8AzwbpyD2vqk3/w6snyk927WpM3f7Cvu5HvllbW1C//wL7p+LTPHGvy
5w8MYidp65paU9/8g8zuwmPjtazJoz+wmS8ovaSwov75Bx42/V1zK6zIpz94
X2jWo0ueFfVRzfct23O3/bEir/7g3fTSpLBfVtRPNc/zD1lhJbIiv/5gxwX9
BO93VtRX/2CpXw/Ll0+tyLM/6Pbubuvmu1bUX1Pg+vur4eTLVuRbCm7yJaJ7
J62oz6ag+Mf9CbL9VuRdCib49Xs6aqsV9dsUWEY5pt9YZUX+pWCd8E1a7QIr
6rspeCpc9WTkdCvyMAXVEU9G3xpnRf03BZsnpbyTwYp8TMGS/fOk4z2sqA+n
oND3UeOjLlbkZQocfe2Tm12tqB+ngD/DdcdsjhX5mQKLTu3L3ppYUV9OQXPj
hbbWWlbkqeb5po+nZlVYUn9OBT/vtvzqH0vyNRV78wo6TRdZUp9ORZv1Y2tt
n1mSt6kwuvN4VPJlS+rXqbA8Fu925YAl+ZuKrpduPZy92pL6dirc++U/dplh
SR6nQpW/pW+xwJL6dyqmGnT3fNHVknxORYNzkWIb15L6eCrejFvXdpi2JXmt
me/7R2kWVRbUz1MhTve2y06xIL9T8dVv65/noRbU11PhPDvUcd9zC/I8DXct
nQqnXLUgz9Pwq2iuW3tfC/I8DZYh89X1ayzI8zTkbagfljjTgjxPw4cLpmbP
hlmQ55rPF67xOuJmQZ6n4f0ald0ingV5nga/u8e8huhakOdpeDNAbexcY06e
p2Fmj/YDmtLMyfM0BEZU5Od8NyfP01B6vZ1W2Etz8jwNnR4EXXx83Zw814x/
wOfm6cPm5HkaOh/txt2y3pw8T0Pd3HSd+XPMyfN0mE+dsHD0SHPyPB0L1ixx
693TnDxPR/SrJp9WTubkeTqmRqmtLQ3MyfN0RHH7dPwrNiPP02H84GyAONOM
PE9HcXTp+cIIM/I8HY7+rsWpwWbkeTo2lHDu/b5lRp6nw2/Ks9Afx8zI83QM
vSUc83WTGXmeDssLffp8mG9Gnqcj6EaF7+sxZuR5Ou6nfO8d1NuMPE/HEe/7
I1+4mJHn6cjyWvbhubEZeZ6BzsmSYy/kpuR5BmJNurwPyjUlzzMw0V4sePPL
lDzPgEmbjh0/vjMlzzMwTffNim/3TMnzDFw/tU074pQpeZ4BzvAZsthtpuR5
Brg6fQelLzIlzzNQoK7LKJpgSp5n4MGCY7GSfqbkeQbOfQvjaLU1Jc8z8Mv/
fJClhSl5noGDirQbrepMyPMMiKr3pfQqMiHPNfPZtnLRqDgT8jwT3Ph9A+aG
mJDnmRg6wH/hRn8T8jwTlv7fE4+fMyHPM7FmVqjf/d0m5HkmZlYdvvJ5uQl5
nok7r5TFKZ4m5Hkm2oxs3iMbZEKeZyJ87KE51p1MyPNMjFu+bm9PWxPyPBP7
KwKKpjQbk+eZcEnh+W0qNybPM5Hb6enuy8nG5HkmNg0YGfhJaEyeZ2JvSBI3
96kxeZ6JV1r4rn/FmDzPxIUfG1+4HTQmz7OQOH968ow1xuR5Fop6/+l7cKYx
eZ6F2Y8zk54PMybPsxD0Y+rTdDdj8lzzubLTJ0MHY/I8CzEPRv3tq2dMnmdh
w4lru1fUGpHnWXi50sTteoYReZ6F7NfHbWLCjcjzLIzpptVVK9iIPM/C5Op5
Wz1uGZHnWejFOS1efcyIPM9C7++7bj7cZESeZ+FgBHdr1nwj8jwLc4dM3MMd
a0SeZ6HU0+yVZx8j8jwbnvFDLc+6GpHn2XhyLutatIkReZ4Np8W/xpsoDcnz
bPhH13cYl29InmdjpXxu51MxhuR5NibZ5nj+/mBInmdjfcD6u1YPDclzzfjQ
tp5+1pA8z4aWqa//jZ2G5Hk2pl4rmJu/1JA8z8YJF9venacYkufZOJms22XT
QEPyPBscz8f40sGQPM+GdXTFJkMbQ/I8G0PSw8KmNhmQ5zmYZ9Oq+/0yA/I8
B53N5W9qkwzI8xwsX9hzKoQG5HkOvnn9NDn31IA8z0FWl2fp+ZcNyPMcrOkR
+63PQQPyPAcNL9t+Or7GgDzPQdcxd35mzzQgz3NwUdKzvPdwA/I8B+894/in
uhuQ5zngWa5dVOhgQJ7nYPSOpneD9A3I8xy8LtzicFWsT57nIDLg50lppj55
ngO97+VGk3/qk+c5iCqMu/D8tT55nostVus7mt7RJ89zsVr1OXzVCX3yPBfy
Sc/XRG/RJ881nzt7OLkt1CfPc2HvMCHeb7w+eZ6LoeqSk7K++uR5LtpHNYyd
1UafPM+FSnLA7Ju5PnmuGf/AmoR2dXrkeS4GnX539XSRHnmeC7M2Xt6KOD3y
PBcbjAa0W/BZjzzPxfmmJWVRj/XI81wcXv8z0OOCHnmeiwUxc1c82KtHnueh
XS+HVlYr9ei+5yF7uSpx3zQ98j0Pp4/X7KuBHt3/PPR5p2yzoKseeZ8HUYjR
t3iuHuVBHlxXOE8erqNH/udhdE+3P++rdSkf8mB7yX1y13Rd6gN52LCw7Zd7
P3QpL/LgtrrR0f6VLvWDf/N7v+rsTV3KD83nvcc9NTimS30hD43j36Tt36RL
eZKHTQ8q5HXzdak/5GGoXWXTlrG6lC956BH3Uiruo0t9Ig+FRu6Ja1vpUt7k
wfLumpuVprrUL/Kwzn7exFUqHcqfPAQE1JeUF+hQ38jDiDMjVqyK1aE8yoPW
pD6/Kz/pUP/Iw9z9Efbr/HUon/IgeakcKTmnQ30kD5McQ2ds3aNDeZUH3YDW
Y+tX6FA/ycPRYRz+gak6lF95WNTlWqwBdKivaNZT/njB2S46lGd5aB6EWC5X
h/pLHu7dmO9wT1uH8i0P857+RZdqbeoz+bgV3GbouzRtyrt8/FZ8dxr6Q5v6
TT5GrsmP/R2kTfmXD8/FO2fPvalNfScf07eeCCk/qk15mI/z46wkOzZpU//J
x4JU00Yjb23Kx3yoebszro/Vpj6Ujyfz5p3q6qFNeZmPu6qX5t9aaVM/ykdr
v40LPc20KT/z4b3joW+xSov6Uj52LhyxeVehFuVpPj5WeblbxWlRf8pHq8S4
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
lUTIPK9Evy1jzgrTJELmeSXefvbnfNaSCpnnlTikdyPiXSepkHleheWHJ9wN
miIVMs+rUHig5PaTHVIh87wKT3P9RPfuSYXM8yq4Xdmkfy1SKmSeV8FgwIdV
Z8VSIfO8CvELj9Yc4smEzPMqNP019tshkAmZ51XQNl8zbo2PTMg8r8JW5z8u
C87JhMzzKvgf3WDi+VFGnlehS85y02F5MvK8CkuiClx7GcnJ8yq8qrYY1bqn
nDyvwloxZ4/lLDl5XgXLn61Fjfvl5HkVciPmW5UHyMnzKnQaqViVHCcnz6vQ
56pt7DeVnDyvwmSbon5PXBXkeRVS5p5/fG60gjyvQlWnMbwd6xXkeRUi9/U5
5X1VQZ5X4d5i36bhQgV5XoVn6fPXdipVkOdVMLsuSzO1VJLnVSiavmFITV8l
eV6FGeFat+K8leR5FTZNSKwNOqokz6swcopNf7+XSvK8CtkeNZvWpijJ8yqM
X3zxzrhmJXlehWMVPT516KAiz6txplAi0p6kIs+rMXOx4dvMrSryvBrRXe+e
e3tbRZ5XI0GvbNrpcBV5Xo3FOlZ/F1eryPNqeF4fdaY/R02eV2N+zecms8Fq
8rwaB7l3JuUtVZPn1djV13nf69Nq8rwahptXnjz0Vk2eVyPp3puNU7PU5Hk1
fhzu0quNXh15Xo2ND/9G1XatI8+rca31kn5fptaR59X40vvYjmO768jzagRN
unnK82EdeV4NxeOEdY7RdeR5NSw2zmtVIK0jz6vx+OCaO08c68nzanT72qd0
7bB68rwaHk9K1O6r6snzajinvkuQn68nzzXvF5u0/v2nevK8GiGbNidsy68n
z6vRzihK7mHcQJ5Xo8NmwzRZzwbyvBpOYxbvfDWrgTzXrKeTeerqAw3keTVc
8wfVtn/SQJ5XI35vO1FOXAN5Xo2dI+tHX1E1kOc12BYjOTzBtZE8r0HRe8FW
7dGN5HkNlGon+3frGsnzGuQd/eiz4kojeV6DK0sn+vC+NZLnNfivr5VdZHEj
eV6D4rt9V20zbyLPa3DBX+XT1qOJPK9Bv/EnLeLmNZHnNcguajd75+Em8rwG
u7c1j2rzvIk81zx/yeSUqKQm8rwGOsGT9Dc0NJHnNQgK7ZNo17aZPK/B+7r/
Bn4c10ye16De7MqQOZuayfMatBb6ZtRfbybPa1C3ub/5jdBm8rwGnWvFyf3K
m8nzGhy4VNQj2eovea6Z37FJ/PX9/5LnNQg95XPNaOFf8lzzvKVrHtw79pc8
18zn6KX+/YL+kuc1WPSDPzsm5S95XoOz56GzsPkvea5ZDyO+Q52Nloh5XgOX
pfc3h3bQEjHPazB2zW/LEwO0RMzzGhgv+VY1eZKWiHleA9OTF4y5i7VEzPNa
6ESvWJa5VUvEPK/FnvXz/949oSVintei/afzKUtua4mY57W4eL1tRYdgLRHz
vBY+T93/K/+hJWKe18LdIzPsaZqWiHleiyNdcXR1lZaIeV6Lsu57fbtqaYuY
57XIynv7vsJWW8Q8r4X4pH6bwI7aIuZ5LW528Pu+fKC2iHlei1kvNt5oO1lb
xDyvRaAoxj93sbaIeV4LuXFo0Y1t2iLmeS2eZKybMf2ktoh5Xos+h5V1Fne0
RczzWjQF7Yj9GawtYp7XYqUhN2l/uLaIeV6LqMJag37p2iLmeS18azqsrK7S
FjHPa5GZlqV+oKUjYp7XouejXu9m2umImOe1+Kk97rZpJx0R87wW0nEjXn0b
qCNinteiKG949YbJOiLmueb3LaumtlmiI2Kea9bfJyM/cZuOiHmuWZ/V7676
ntQRMc9rsfi8yxb3OzoiNr1aBP3Xf1tusI6IeV4L5db2t0+H64iY52KsDjAq
65+uI2L3XQy3XL0ZRVU6Iua7GKNyBpec1dIVsfsvRuq7lKv97XRFzHsxZLHS
lfkddUUsD8S4Pez93BMDdUXMfzEqdo5Y03OyrojlgxiZZ0JvpCzWFbE+IMby
Ws+S3dt0RSwvxDj7wWFSq5O6ItYPxBg7c3DC99u6IpYfYuyuzV+3PFhXxPqC
GO2ud+1gFK4rYnkihl17gfJJmq6I9QcxhuuNyBlTpSti+SLGiaB52aV/dUWs
T4ghvBskPWKrJ2J5I8Y7/8XObTvqiVi/EGPAhZvzhAP0RCx/xHDueyBoziQ9
EesbmueH9OUoFumJWB6JYTO6+PTZrXoi1j/EuPnuNafjCT0RyycxdhwNf/nt
lp6I9RExlg0YMXP6Kz0RyysxjHVmWFR+1xOxfiKGqUWbpP2peiKWX5rPS+Me
2VbqiVhfEePtsqO+j5v1RCzPxLgUtnZ1fxt9EesvYow5+sI7qr2+iOWbGDPL
186d/Z++iPUZMSa0S11YNkFfxPJOjBB763XbFuqLWL8Rg/N8hK/uFn0Ryz8x
kqJu3PI7pi9ifUeMvYEDvzje1BexPBRjS+GUvEcv9UWs/2jW56OuUfcwfRHL
RzG0rfb2ev9HX8T6kBhLMku8B5fri1heinHPZPXp7436ItaPxGif0ytkjJWB
iOWnGF0mrSyNaWsgYn1JDCtZP9sp/QxELE/FsA6PGpQ4zkDE+pMYO83GLpnq
bSBi+SqGb2jekaSNBiLWpzTrn/X5odcRAxHLWzE8X+h/ib9mIGL9SnM/ssp/
T3xuIGL5K0b1ootpUUIDEetbYkgGd88ckWQgYnksxsUNJcnfSgxErH9pvl9X
+qNfvQHls+Z89FrwNMjcUMT6mBhGUTsOd2htSHktRh53kdetPoYi1s/EuNZ2
pK31GEPKbzG6qTwjDs81FLG+JsY5ydtVqnWGlOdihDre/Ovjayhi/U2MO769
DqdfNqR8l8Aq/4lqTKChiPU5CbRqus7+8MWQ8l6CEdYVAe3iDUWs30kQMse6
8FyhIeW/BO0K4o0blYYi1vckmGk502m5iRF5IIFtfSI3ztlIxPqfBE4hmxv6
uhuRDxL0WOETeXuEkYj1QQmaIvP26M4yIi8k6BlgxvNZbSRi/VCCda3516P3
GZEfEqwJGPLX7YKRiPVFzfyM/Mf6+RuRJxJIvuzfXvvRSMT6owTPBv49NinG
iHyRYPXzabue5xqJWJ+U4GPf4InGMiPyRoJWT0dqLzMwFrF+KYFp3xGXhA7G
5I8Ezdo5+g5uxiLWNyVYMHjk9I0CY/JIgvvCZwcjpxqLWP+UwNVqxEmXFcbk
kwTDvAXrNu8yFrE+KoFXflK3n2eMySsJnrdyD3e4byxi/VSCG1NP9V391pj8
kmBZMOfA55/GItZXJRgfpXvfJNOYPJPgdJcT12bVGItYf5Vgql3GMn9tE/JN
gujwLkYSOxMR67MS9I59uW9gJxPyToLrW25GHh5oImL9VgLnKe2LYyaZkH8S
5KkOJNkuNhGxviuB+HXhhdlbTchDCUbtONTmznETEeu/EujmXjqYf9OEfNSs
59lJQW2DTESsD2v2M6b46dIwE/JSAu3r5zc/+mMiYv1YgtgLx4wKy0zITwle
fGz2adVoImJ9WYKdxt0vzbM0JU8lsO824cTVNqYi1p8lmBx3bnSChyn5KkGD
pFes8VhTEevTEmTcWMUfOs+UvJUgeMd69+3rTUWsX0vQp2Kn2XNfU/JXs5/K
0Oe5l01FrG9r1mfqAWubQFPyWIKUD9X/Df9iKmL9W4LyXsPbb44zJZ8lUCR+
SrxfYCpifVyCozNODY1TmJLXmvu3RbyhwchMxPq5BLelbRd24JuR35r7dG6B
xZQeZiLW1yXw+Jy9a8cwM/JcinUn0x7dnW5Gnkvh/uPkqXAfM/JcirScHt0r
dpuR51JkjNE5be5nRp5LcTR+8KMeD8zIcyk8qpy3TXlnRp5L0S0sR2tDpBl5
LsWPyM/Dz2aakedS9N8nGfysxow813y+8EtNhLY5eS7FtVGzp+fbmZPnUhTr
62+s72hOnkuRvaVRYDPQnDyX4uLGvT86TTInz6Vo4xteP3iROXkuxdNuNoWe
W8zJcyl6Bdzfs/SYOXkuRcj+1xFbb5iT51JMv+QrOvLCnDyXorqN58pLInPy
XIpDn+aJ7ieZk+dSVI0s/vGixJw8l6LTjM7bPtaZk+dSWKb5JIWaWZDnUqyx
LsqMcrUgz6VofS3jbHwvC/Jcisbg05V/RlqQ55r5Px8oSZ9lQZ5Lobet492s
1RbkuRQf556XZ++zIM814+t+FmeftyDPpUhdXHwh65EFeS7Fle1eGekfLMhz
KSaVDo/488uCPJfi8ILG6fHZFuS5FH+yvx6PEluQ51J8WxE9P1TXkjyXIs5r
RfIHriV5LsXGaX8qn3e2JM+laLtp1sN7gyzJc836GvepvzDZkjyXwnv/89pD
iy3JcykCTugf2rzVkjzXzOfMoTeLjluS51KMF686MOmmJXkuxeCfWuX/vbQk
z6V4FHeiqm2oJXkuRZjL+JNmyZbkuRSfEk6GykosyXMpopvOnE+vsyTPpbBY
+LvR28CKPJei5MbuPfGWVuS5FErO1tFDHazIcynC+82fH9zGijzXfN8i9Wur
blbkuWZ9jhz18fOwIs+l0JprOb9piBV5LkV9K87NVWOsyHMp+oYNbJPqaUWe
S+H8oqN02Fwr8lxzvmL2mLxcakWeSyE6k7uKt86KPJdiWh+5je92K/JchjFz
FuhUHrAiz2VQS8L7Tz1pRZ7LEL0y5l3IRSvyXAaXt/Y7W9+2Is9lEDhN9D32
2Io8l+HoV+uEqiAr8lyG0Z9Mlnl+siLPZYg9nD34XZgVeS7DorAec3kxVuS5
DKPsAr7s+mNFnssQzi9flJVjRZ7LwNG5NW5wmRV5LsP2C8u23ZZYkecytJVX
FjXWW5HnmvH8/1yeq2dNnstgo448/sncmjyX4fOQNV+59tbkuQzeu5f33tzK
mjyXoUs374rYztbkuQyDptbnd+5tTZ7L8Faa73B4kDV5LsPT/l/OZ4+0Js9l
6L2/59i+k63Jcxl85MU4O8uaPJdhyrbDW4sXWZPnMjR7vykfuNqaPJdhx2nH
W+e3WJPnMvzIWnS6ZK81eS5D1hH3kAHHrMlzGb5+dW9/9pw1eS7DirMmv/Ou
W5PnMsTPXhrc66E1eS5Dvn5ZwqHn1uS5DGflg7snv7Mmz2UQmVpGtBVak+cy
LHDXu74p0po8l2HC9ojHogRr8lyGZU5/a8wzrclzGQ4fm7lxTpE1eS7Did87
3B5XW5PnMiDTrK1EaU2ey7Bz1FfPgVo25LkM+gm9Px02tiHPZQi85Dj7t40N
eS6D234ndw7fhjyXwTMlTzCvvQ15rnlfU87xB91tyHMZlpxfbFDWz4Y8lyEi
bfPnbkNtyHMZHqbKHm8YZ0OeyxDc9Uzkm6k25LkM59pUuirn2ZDnMlQHf3ze
b7kNea7Z34731+1Yb0Oea+b7aPKyjztsyHPN+em44ZzqoA15LsP3xhe1Hqds
yHPNfWvzznfzJRvyXDP+EPexr27bkOcyPHscO6zqsQ15LsOFmf+t7/jKhjyX
oWOAc+yiTzbkuRxl3E4LbobZkOdyTO2k3yY52oY8l6Pg+CKu2R8b8lwO3SEV
A4fn2JDncnRrPeHCzlIb8lyO3/36OASJbchzOSa9mRxfWGdDnsthPnbCB3td
W/Jcjs1dUn+PM7Mlz+XIz7ttu5djS57L8dB/0vGXLrbkuRyuKVe65na0Jc/l
uJnarsnC3ZY8l2P1h8eNgwfYkudyJGf86rxmuC15Lke73Th8fYIteS7Htelv
TCOm25Lncqzt+Eco8bYlz+UoOTj1Ht/HljyXw/1x9vNRG23Jczl8A9sUr99l
S57LYXY/Ycy1Q7bkuRx1dddThadtyXM5Nrbuer7ksi15Lsc5I4+tZndtyXM5
do1Zccj9iS15rlm/xxs/Tw+2Jc/l4K/Wc94ZYkuey9HwJi7g5ndb8lzze9Sh
uV9jbMlzOTq0SeiX88eWPJdj/wmfQc05tuS5HNyx9T7OZbbkuRzZwf2+DpTY
kudyZCxN6D+73pY8l6MxZ0fmVl078lwOOOQ+Om9mR57LcfLLu0vPOXbkuRwJ
Di+fRrjYkedyqPR3leR2tCPP5cidHj1a3dOOPJfDx2RarOUAO/Jcjq3q8J0d
htuR53L8eZQ0dtAEO/JcDm+fHkM8p9uR53IU3jw1Y5m3HXkuR3fxjQs7VtiR
53IYDLOSntxgR57L0XPdnS23dtqR53IsD1Q7vPC1I8/lWB+fkP/llB15rpn/
zezo6Et25LkcIYK41PTbduS5HEu2z9EvfWxHnstxV91rmizIjjzXrHeg2Y/m
j3bkuRwrr9+cZhxmR57LMSjjor5ttB15LkfH5MAUp2Q78lyOsNrzP9tm25Hn
ctyq1krrUmJHnsvhafLM0L3WjjyXY/77kTP6qu3IcwWmHj3yfYA2hzxX4EWF
6+QhJhzyXAFxQ5RaYMshzxW40uU/0TA+hzxXwM62rf/w9hzyXIE8z8EBw7tz
yHMFlmcOjhjWj0OeK8DZkaE9VMAhzxUYdy9q9pCxHPJcgQ1jQn8P8OKQ5woU
lW2f33cuhzxXoLn9IyP3pRzyXAGHHY2xXdZyyHMF9hv2f9V2G4c8V+DIDvPn
Tvs55LkC22S9w2yOc8hzBS7FLJYaneeQ5wo4H/Yc1HydQ54rMGfYh7vSBxzy
XIHdphP4Jc845LkCn079DE57yyHPFRj+M3/Br68c8lyBiVe8OnyO4JDnCtQd
SNR7FschzxVYVejQcD2NQ54rEOmQb3Q8n0OeK+D+PM9tawWHPFfgTWLCykUy
DnmuwHrO2i8TGjnkueb356vb99PnkucKfGk4+qiVBZc8V2CF5Y7/jO255LkC
ax+qC8WuXPJcgd+bwx6mduKS5wocs/Lb8dWdS54rcHkRb/GDAVzyXLPfibyF
R4dzyXPNfrcat2nlBC55roC+xYpr46dzyXMFAgy7JHbz5pLnCvTdOdHVfAWX
PFfg6L7T+6vWc8lzBfYG3Zf+2sElzxUo3j9mx5ODXPJcgRu5A62OnOSS55r1
5PYLWXiRS55rzodYsXXgLS55rsBqsz7DOf5c8lyBTqYvWte84JLnCpgV8a0j
3nPJc816hMD6tpBLnivQ/k1C682RXPJcgR98v2FjErjkuQKTo/ts5mdwyXMF
tlvsf1NbwCXPNev1qYtuWCWXPFegXZ180UU5lzzXfB59I25JE5c8V+Cte/r4
3gb25LkCnTPWpmhb2pPnCqSLOevj7O3JcwVG7PXj3GplT54rUadzLWpFZ3vy
XImt76pP9uplT54rMXDDpNmNA+zJcyV+XNjRJ3y4PXmuxOE9XfhnJtiT50rI
TrexmjbdnjxXYnuAq5Wjtz15roTvzDyn3OX25LkSa/Xa9X643p48VyLwv8Dp
y3fYk+dKHD/Z41Cng/bkuRJLvbd9Lj9hT54rcZk/uDnwgj15rvn81fDxK2/a
k+dKdD449kHHR/bkuRKtmi10i5/bk+ea/18yde39d/bkueb9AtPy5n2zJ8+V
KH0/f779T3vyXIn+ex8WxMfZk+dKlH1fteFEmj15rkQHry0GQ/PtyXMlHEcf
fKQqtyfPlai57DXuhdSePFci/ESgalGDPXmuxNvw0c85ejzyXImcSzUrIs14
5LkSU6QLuuzi8MhzJdocnC/r4sIjz5VYOCgwLKMDjzxXwmK7/rUTPXjkuRI9
DvfZ3K8/jzxXIuakemqRgEeeK5G+yG7AubE88lyJyW/HtR/oxSPPNc+b7c0p
nsMjz5UYst/G5OwSHnmuxJWmzrp91/DIcyVM5vpoZW/hkedK7HE5r31oL488
V+JX7AqDTkd55LkSiS6vLGLO8shzJXyq3RzXX+WR50rM3ujfyfoejzzXjHci
47/XT3jkuRJnxecnegXzyHMlZhifWyL5xCPPlbjV9/puvzAeea6E/YJNl7tF
88hzzXiX815FJvHIc815FT35vSSLR54rkeZyrrKpiEeeK9Gtdq7J1Woeea6E
izyhcw8ljzzXPP/ah7ERzTzyXIn1vxJXzjN0IM+V0NtZfkJi6UCeKxF0ITTw
CM+BPFei/kTrKF5rB/Jcc5/840qfdnYgz5V4NfOC/qBeDuS5Em2v9mwTM8CB
PNesV8qGwXOHO5DnKsT0c5xZPt6BPFehyli+bts0B/Jchb7Dww/rzHcgz1Xg
eU+/dmaZA3muQp3WmkD7dQ7kuQrDE+M/3NvmQJ6rMOvR+O+d9juQ5yrcGvso
OuiYA3mugveIh/Ee5xzIcxVU36wSQ645kOcqhBa+jRty34E8V0H7zKyo0EAH
8lzz+8of34a/diDPVTDwCg36EeJAnqvgOYl3a8R3B/JchbZLLxz6Hu1Anqvw
3Llu2dBkB/JchY4vOMO/ZTmQ5yp8lQc7Dih2IM9VuL3vatXbagfyXAVJt3Mf
uysdyHMVkv9bvi+g2YE8V2FZbuFgV0NH8lyF8K5JysuWjuS5CobBzU9MeY7k
uWa9Z7tPO9DKkTxXYeVJD7WskyN5roL/nJRLy90dyXMVZG9yOqf950ieqzC6
p+OHMcMcyXMVnhRPHfRxnCN5roLFsJmfOkx1JM9VWGUqdrs015E8VyGgd8V1
raWO5LkKn6dZN61e40ieq+Bb5D4zZYsjea5CWbL9E+x1JM9VCPvpVxtwxJE8
V6Gm13I3y7OO5LkKIz6uWLT1iiN5rsKl9otOZdxxJM9VeLnF9dmQAEfyXHN+
oteL7gc5kucqzNjtGq370ZE8V2GFTuOvpSJH8lyFia8ThT8iHclzzf4t3BjY
NsGRPFdhdaH/sYPpjuS5Cjo+Q+bk5DuS55r1/2HUekCFI3muWY+9SZmXpI7k
uea8V685WVPvSJ6rEHfjYbfRuk7kueZ5i0aF3TF1Is9VmNuq3XiFrRN5rsKQ
t6Y/x/GdyHMVqvfFeNxt50Seq6B453FV2s2JPFchvYRbOcLDiTxXwfEu3K8M
diLPVfC4tn9lyUgn8lyFwFOPL3pMciLP1UizOBJ0aIYTea7GqKCKL/HeTuS5
GhPnPPnMX+FEnquxsPXZZyvWO5HnauSErzkdvN2JPFejjQfHu36/E3muhp/e
rFbDjjuR52ps9DdIOn7OiTxXw8VdujX2mhN5rkYer8rI9r4Tea6G4YPwUzMC
nchzNVIuT2m+FuxEnqtx5qv3woxPTuS5GistwoIdw5zIczXuBU6Qzv7lRJ6r
sSwrvvW1RCfyXI1KWSvBnwwn8lwN75WWE60LnchzNQrM14+ZUOlEnqtx56hN
r6MyJ/JcjReNMcbCBifyXA23tRvjlLp88lwNd7ckXzczPnmuRuz58LZL7Pjk
uRoWY/ivr/L55LkajY1P3aLb8clzNR7MH3mlqRufPFfj7zphZXcPPnmuhsnZ
arcFg/nkuRo/hA/nnR3JJ8/VcPj0fvuXiXzyXA3dZ/X7yqfzyXM1lj8YsYnj
zSfP1eh4YKWnYDmfPFfDo24wf9U6PnmuxupRVxMvbOOT52rcVo/bErKPT56r
ETimu3b+UT55rsain9ydBn588lyNs/MzMrtc5ZPnamhFTuo86S6fPFdjl9O4
RRsC+OS5GqI1Dw6dD+KT52pcaHQ7F/yBT55r9tfv+9F4IZ88V+Phhf9W1Pzk
k+dqeN1Z7m4azyfP1Zga17q4QxqfPFdjCneY79A8PnmuhsTvjtHcMj55rkb8
K4sdm8V88lyNU9Ur40+q+eS5Gp9Kjlnf13Imz9UQDxIMfG/kTJ6r8a1s1cRf
Vs7kuRrPLfJGZ/OcyXM1hiZt71Lbypk8V0P7mInibydn8lyN9bs2BFi6O5Pn
atS/8B3q8p8zea5G+00O37sOdSbP1ZjhatGt/1hn8lwz3sn/9gz3dCbP63Au
Z8ubibOdyfM6rNh6PWHGImfyvA5FzQdSvFc6k+d1WPZXL2zZRmfyvA7jGpov
rt7pTJ7XIctr7IQNB53J8zpsff+1YvMJZ/K8DjNf912/7bwzeV6H5Eln07df
dybP69Cdd7fzjvvO5HkdbkuHL9ge6Eye12HJqpm7tgY7k+d1+LTk7a5Nn5zJ
8zrEOPZduC7UmTyvQ/zdD11WRjmT53WomWOXsTjBmTyvw/i8juvmpjuT53Ww
vPa7xCvfmTyvw+Qb+cPHljuT53XoGoAjQyTO5Lnm+Snfn/aqcybP62A2dNzb
9tou5HkduvkG3bc3diHP69A5J26TkbULeV4HXefjHdU8F/K8DqEZb4UlrVz+
N2h9/tM+2tzY+oqGHLQ+B/pP7cHMAwZy0Pr8pz33yRm3V1vIQevzn/ZMh6wY
pjnIQevzn/bLDBez13vIQevzn/bXhDd8TAuQg9bnP+0bHtjt842Qg9bnP+1r
9uvmGifIQevzn/ZrG6L+iWfIQetzYHpYvLjwd74ctD7/af8z4Pmxu+VyBwB/
oCzL
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 1, 0]], 
         PointBox[CompressedData["
1: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
gaLpq8uMyfN0/Jd9Z/XSJGPyPB1zLlz4tTDKmDxPh5/HuANuwcbkeTrEf9ft
cfc3Js/TkeX78v2yXcbkeTq6z0jF2hXG5Hk6rj0+pLVjqjF5no7QHbsaDw0y
Js/T8UG5qffltsbkeTqqMltffWxmTJ6no4PrxH5xSiPyXDNeh0cNeXlG5Hk6
HkVo1/79akSep6NkqI1J21dG5Hk6LGtvTRh3y4g8T4fTDq9Hm44bkecZqO04
scv1rUbkeQYc7ZUxXxYZkecZMI4avq1hnBF5ngGj87WDe/c1Is8zYJPx22q1
kxF5rvl8u1hFkIEReZ6BuLjDxXliQ/I8AxecJVltMg3Jc833n0lPXxlnSJ5n
oOCize/HzwzJ8wzsfLo9UXnVkDzPwO6oP59GHTIkzzNwRNcp4vxGQ/I8A02/
uVdL5huS5xnoOeT+hv9GGZLnGXAte9j7Yg9D8vwPpKHauWJ7Q/L8D1qFBWyf
pmNInv/BnE7/ScKqDMjzP2hsKJ7KTTMgz/9gUsL2k77RBuT5H4xtTr5bEmpA
nv9BztnyC7MuGZDnfxClvLMwdp8Bef4HBxrL5K7rDMjzP/Dr+mRR6BwD8vwP
at5mn2snMCDP/6Bk1LqAm10NyPM/GL55/FwnrgF5/geR11bnBP7VJ8//oCpB
1LF1hT55nokBWeO6B6fok+eZ+FmkqOwp1CfPM5ERE+sRGaJPnmfCNeLx6fEX
9MnzTDx5+nhNhp8+eZ6J9FnRsvVr9MnzTPSZU95Zd7Y+eZ4J5eYOBoHD9cnz
TCyM3nFsYBd98jwT02LyHqfa6pPnmQi96+m1o1mPPM+E/WTrBIdyPfI8E51n
Fn0WJuuR55no/rJ83uoPeuR5JlZ97rrLNkSPPM9ERWB49+jzeuR5FkLHnV6/
2U+PPM/CsprPA9qv0SPPsxC2atuxjFl65HkWXM7cWhwwXI88z4JyhnvEpC56
5HkWfFRRp4w4euR5Fm50+53zqVmXPM/CkutRIcfLdcnzLGxdeLRiSooueZ6F
nb2n3uQIdcnzLDSe6RKTHaJLnmdh1Kz+s0Iu6JLnWdhnfGKq915d8jwLn8aM
ez5urS55ngXze8d9+HN0yfMs6HbefKdW818Z8zwby/c4d/nUVZc8z8ajJWFm
d7i65Hk2Bp+bPGGPli55no3xg+yyFlbqkOfZEPv2jfnvtw55no1BQz+pW0Xr
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
sUrIPC9H2KHHvXmcaiHzvBxaz+zSfi2vFjLPy4E/3biHXlQLmefliBiUkt9f
t0bIPC/Hcfe6fgUza4TM83Js+nhE51RQjZB5Xg7F1DWj+0prhMzzcoz4dFac
MqJWyDwvx9T5FU1bA2qFzHPN6+S1yy3za4XM83LUJ+mcmsUTC5nnml4+bt5x
Z4FYyDwvx9f6nveLPcVC5nk5fi7Tzww9KxYyz8vRe8mCjl6vxULmeTnGxz84
0DdXLGSel6NtV69KqYFEyDwvx2fnvu7Pe0qEzPNyOF3YmLBhrkTIPC9HWu6D
UZ39JELmueb77y55nndfImSel8NrJJ97+YdEyDwvx0QX97WTFBIh87wcogmP
Hjc5SYXM83LolJ5MezJaKmSel2M471jJwvVSIfO8AqefdUw1vCAVMs8r8OOM
5Obzd1Ih87wCX8dtxYJCqZB5XoEp6weEN5vIhMzzCiRO+Sy901cmZJ5XQJX9
snGkm0zIPK9ARY9T3/L3y4TM8wq0P5vp5hciI88rcK6tazAvUUaea54f0iUk
TC0jzysgGD1pydjWcvK8Aq3a9/yYMU5OnlcgcOeq5LWb5OS55v2px4/VXZKT
5xU44N0z9/AHOXlegeNLq5MsS+TkuWb+eYuXXDZXkOcVCHrgtM/JVUGeV+DG
9pjet9wV5HkFZptUrW91SEGeV2DH4QG9b4QqyHPN81cJdvCSFeS5Zv6nQoYE
1CvI8wokDLTdadhWSZ5r/m9UOvfYPUFJnleg9tOGmVVeSvK8AvJHwUVuV5Tk
eQVWTt2QGy9UkucViG+9ZnjvUiV5XoHL/iOaLlmoyPMKtHa6bd/gqiLPKxEZ
0OO4+yIVeV6Jhb0uTXl3SEWeV6Ku75Gl9o9V5HklplaEvvdKVpHnlegse7n0
U72KPK9EtsmsMY5t1eR5JdKGD/RcP0FNnldifqNtTKSXmjyvxG6rGzMMrqjJ
80r0fnjUeppQTZ5XoqfWyaYLJWryvBLd5iy2TjevI88rcVsWOZ7nWkeeV0KR
5nZrjnsdeV6JmRb1Vv4H68jzSvyYOefqp0d15HklRmzu1r8xsY48r8RR16HZ
PerqyPNKdO021t+9dT15XokX2eYTjo2rJ88163Vlru7zjfXkeSUmzi2O/H2x
njyvhH/M3nV1UfXkeSX0rlRbORTVk+eVENxRB7uaNpDnlch6uLbLtL4N5Hkl
Bh23vLByQQN5Xonjvi8LfPY1kOeVkKzvZH38QQN5XokeLwc7XvrZQJ5Xov3k
d423FA3keRVGTd33PNipkTyvQuttC10fjWokz6uQfqndoUdrG8nzKpw4++zq
g4BG8rwK3S+nbb7zppE81/x97HajK7mN5HkV2itXLDhp0ESea/4+9cDS3T2a
yPMq/LZ/4rB6dhN5XoVJkbH7ZuxuIs+r8Pz9w4CBQU3keRVK6oaN539pIs+r
sNNg9e262ibyvAqFXc0updo1k+dVGOxi2+HpsGbyvApvB66YcHBFM3lehWHD
K5pnn2wmz6tw8qH/iHbhzeR5FXhPxpjXpDeT51VwO6Ba9OpvM3leBW+Xy712
dvxLnldhbyc7v8FT/pLnVVh013OMcutf8rwKofP273927S95XoWatwt6roz+
S55XYdO08nH2ZX/J8yqEB3OKPQy1RMxzzfennJj/hq8lYp5XwTxzTqNpTy0R
87wKXVdu+7lohJaIeV6F1O6l35/M1hIxz6sw5MJTRYOnloh5Xo1Zr76PHb9b
S8Q8r4aNzugP585oiZjn1ZgdaO+WeUdLxDyvxnf9yby2r7REzPNq9BYVK1d9
1hIxz6uho18pC8nUEjHPqxG10sO8skZLxDyvRky7WSO66miLmOfVcDsWd9qT
qy1inlfjaVGMOKiztoh5Xo2kwXNWZw3VFjHPq5GYd0RqO01bxDyvxplzy09P
8NAWMc+rEeupHrBnu7aIeV4N1zYzq58e0xYxz6uxL9fvac51bRHzvBr8dmd8
zJ5pi5jn1djPOTthUIy2iHlejZpR51t5pGqLmOfVuFceqj5epi1inmvmd6My
6VmDtoh5Xo3hD1c+TrbQETHPq+Gs3fOgoo2OiHlejXZabnO4rjoi5nk1DJ78
bd1vvI6IeV6NdULXoqkLdUTM82qkKG1vrN6oI2KeVyOE/2LCvv06IuZ5NcZO
7F528YKOiHlejd/u13aEPNARMc+rcagLTxYZqSNintdgZmn0wq8/dETM8xo4
9Xj1NC1PR8Q8r8HHwZYVBTIdEfO8BoqFtaZVBroi5nkNJg/ZbiNz0BUxz2sw
IjO6QdVdV8Q8r8GEMcq4euiKmOc1eDTAdVPDTF0R87wGF52DFHUrdUXM8xq0
5y2bp/TRFTHPazC68fI58UldEfO8BuXj1t8vu6krYp7X4Nsx/TM5z3VFzPMa
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
uS+BAkTNsCR/JehV1iNH4WFJfVuCENP287tvsySPJTha1hi65LAl9W8JbETn
089esiSfJdie+TEr6oEl9XHN+vTb8LrkjSV5rblvXdZ7mn+1pH4uwcn425W9
My3Jbwl82laNnFFlSX1ds78RvddvbLIkz6WQ+XbuN9rQijyXQtfW4covSyvy
XIo5p91XLOBZkedSFC1fdTm/tRV5LsWdVY96r+5iRZ5LsWLEjV7VfazIcynq
VS/Oew2xIs+lcB6+wl060oo8l8JnUvvjWyZZkedSBGeudZDMsiLPpejt9sxs
o7sVeS7FmYg1HuUrrMhzKVpF2fCXb7Aiz6UQeLTrl7ndijyXwnU698kMPyvy
XIq+2R5H449YkedSzLU6Gj34rBV5LsU7pya30MtW5LkU7sNGzHK8bUWeS9FV
PyHk+EMr8lwK45MdFyvDrMhzKWKiYzYte2tFnkvB/9w252u0FXkuxZuPcQ/7
frUiz6UYbtLt15UkK/Jcip6ypOlNf6zIcynM/wzrsbTQijzXzK9N9fLoSivy
XDP/Zx7y1nIr8lwKcXXrHL9GK/Jciupvj1pn6lmT51Lg3cF3rubW5LkUKuPe
T89wrclzKRwX91cXO1uT51LcMre7OrSjNXkuxdp4N/+zPa3JcylGrT2enT/A
mjyXQv60876+sCbPpegyU+S9f5w1eS7FkTXpsT+nWZPnUlwsqVvOn29NnkuR
UfJk3oql1uS5FG/P+t18vNqaPJficl/lQJmXNXkuxevOt9sN2mlNnmv265vh
st37rclzKR7vflsbddyaPJciVjriV2OANXkuRVBcz79DrlmT51KMzjff6x1k
TZ5LERCxYWr4I2vyXIolq7LXV4Zbk+dSbLtYldH2nTV5LsXej90uzo+1Js+l
6L6t281T36zJcyl0Du+Rf0i2Js+l8N/74nJtpjV5LsXI1kuPuhRZk+dSeD+w
i51UZU2eS+GbsXait9yaPNesR5LY6U6jNXmu2c/Fw4Z80bMhz6V4PrPkTq2Z
DXkuw585+2dxuDbkuQwbePenDnS2Ic9lmP2z7Nz8DjbkuQzrehW18ulhQ57L
sPNuL8VFVxvyXIb/KpbbhA+zIc9lWLyV7/19jA15LsPWxdVti6fYkOcy6E3z
5jbOsSHPZTgpmDXVerENeS7D6gHOP9qvsiHPZajrtzlgwEYb8lyGvaOrro3d
YUOey9D7W7fy2X425LnmdeaP3cuO2JDnMvibbp65/owNeS7DXO+X67dfsiHP
ZfB5P/Cr700b8lyG74eurz0QbEOea543ft+UI09tyHMZFkUc3XIswoY8l8Hw
0ayMYx9syHMZvmUc2X803oY8l2FY549rD/20Ic9lSN/77MLe3zbkuQwWqqpm
nxwb8lyGIfvahHiV2JDnMjwMkJ5bVWNDnstwpU4/yk1pQ57L0N9Dp/2UZhvy
XIabd858HWZgS57LkH1x5rPuFrbkuQxV25SJDna25LkMb9Rt++q72JLnMjgv
2f+rpoMteS5DXvS7kN89bMlzGaJX+YqiXG3JcxlWbdpoe2eYLXkuw/o5w4IO
jrElz2VYOPLi+hVTbMlzGR5Yttsyao4teS6DKOZ8eOtFtuS5DOrVF3s0rrAl
z2W4PvR3Qep6W/Jchvx2+klPttmS5zLURibWH/S1Jc8159u5yn3+IVvyXIbw
i3rqrqdsyXPNeG99/9Zw3pY816xPoSLt63Vb8lwG5fK+Tlfu2pLnmvnMdr2y
PNSWPJdB68PzST1e2JLnMkzPXjhAEWlLnsugqimd9y7GljyXwdfUNGzvV1vy
XIapDbuGj0yyJc9lyDlSraP7x5Y819yvRw5N0fm25LkMnmciuu8ttyXPZSjM
2R0wRGJLnstg1r5tN7naljyXo8naoy5Ui0OeyxE5SNGwzIhDnss15+tiXzsr
Dnkuh8e+psDP9hzyXA7DOWVDdrbikOdyKDZbm3XuxCHP5cju6GqV2pNDnsux
xtFq3L4BHPJcjr67l4R1Gc4hz+V4MyV/UuIYDnkux474WQ7eUzjkuRwpn7fz
HOdwyHM5ukYZTHjvziHP5Yg5Gf9o0QoOeS7Ht+btwxrXcchzOXzDUrWubuWQ
53LkX38g77ebQ55r5hP1hPfjAIc8l6P83aP1K05wyHPNeG4uE9cFcMhzOfw2
Xrp7+iqHPJfjl4f5kVZ3OOS5HO0HnLz87CGHPJejZ6fUtGFhHPJcjv3Tn4/9
+ppDnsvxRF1cOFvIIc/l6GU35Fl2PIc8l2Nru+0PV/zkkOdy/HFZ8qs8lUOe
yxF2QtRuQzaHPNd8X5zH/ZoiDnkuxxkty9kbqzjkuRzVO872qpJxyHM55to8
G7i6gUOey5EQNWh9gQ6XPJdj8n/q724mXPJcM94/bxckWnPJczliV060GevA
Jc/lmKfrrXzTmkuey+Fy3Nyga2cuea7Zb98swdVeXPJcc/7ehQcbDOSS53K8
nrZk4JbhXPJcDucd4dLMMVzyXI7ZV3zTR03hkudyRHmfKQuZzSXP5Qh8/rat
hTuXPJejv2XCEa/lXPJcjofL7nES13LJczkcdxl/77WFS55rPp+R9PjUTi55
Lkeb7JSI0n1c8lyOB68KywXHuOS5HBZeKWOunOWS53I4tdnztfoSlzyX4+6C
F94jbnLJczmmmUydcv4+lzyXI25a+0mFj7nkueb9N80393nJJc/lWDeu4MOe
d1zyXI7L0l39P8dwyXM5/L+HJVp95ZLnmvVbsOjSvEQuea7A7Hq3A4HpXPJc
gburDl3MzeWS5wpkHXj5q3UplzxXgOv5qffSGi55rsDqv1fe3FBwyXMFftsa
eGY0cslzBWaKK4fa6tmR5wrEDuo8cJKpHXmugC736vz9NnbkuQKZvZ1vv3Kw
I88VaLa9YF7W2o48V6ANP/s2r7Mdea4ZX3D6gnG97MhzzfMneA7aNsCOPFdg
+sa1/90aZkeeK9C4N3bl59F25LkCXeNnv6ydZEeeK9BxkHZn7iw78lyBcdtD
RYPc7MhzBd48HOjntsyOPFfgQeLxpbtW25HnCrhuPeJ5ZZMdea7AJpHN+Zc7
7MhzzXi8OIU/99iR5wr8CNg8r/SQHXmuwJfXVuKmk3bkuQIOdemPbc7bkecK
nPj4/HSHa3bkuQLfVxw8N+COHXmuwOnpA96NeWhHniuw7sALw1nP7MhzBRQ+
Rd6LI+zIcwUeD3hhuvq9HXmuwN8RJrGbPtqR5wosmpJyY/s3O/JcARvbpus7
k+zIcwW2tPF6vzvDjjxX4MkQvo5vnh15rlnvz6VrdpXakecKbL0UL99RY0ee
K9CDey9os8KOPNe8Pr9x69pGO/JcAc8CjucyXXvyXIHo+Uf2zDWxJ88VcPQJ
j5hgbU+eKzBm7HGboTx78lwBaUKDf9dW9uS5Avk/6vvwOtqT5wq8/Omt0O1h
T55rxstZmVndz548V2BiwcvC1CH25LkCvM5uFlEj7MlzBRKOjl94e7w9ea5A
8s+tXw9MsyfPFfBtm7Bw+Vx78lwBk0MzLUcusifPFXjbWlzkssKePNeMJ+Rm
Vt1ae/JcAZfOs5VJm+3JcwXqHxv2feRjT54r4B737OzevfbkuQI9F4+2nHXE
njxXwn3F+7D2p+3JcyU+Odluk5+3J8+VGPhw+IKYa/bkuRJbOw1eeuaOPXmu
RJ91jcfmP7Qnz5WwlB9Ibv3MnjxX4unITyh9ZU+eK3Fr4ccfoVH25LkSC1rt
2LMx1p48V2LuxvSpvb7ak+dK1KWXjqhJsCfPlQgcd2duaJo9ea7E2Xrt06ty
7MlzJSwKDItbFduT50pM5z9fnFZpT55rxn+9se6U1J48V+Jan/IIQZ09ea7E
17AdF6V/7clzJYyq710MMuCR50oILm17Pd2cR54rsbx3SX2jLY88V2L0uIYl
D/g88lyJ8HOvSqa14ZHnSqydan9W2YlHnivR1qLdgus9eeS5EkfeZ44e7soj
z5Xo/X30zNyhPPJciXuHPfb7jeSR50psez4oyXECjzxXwsT7++jX03jkuRIJ
TW0zps/lkedKdLs64myZO488V8LTp6en33Ieea5EXFvxUpu1PPJcCT/v0773
vHjkuebv+80j+3vzyHPN/s72cYjdwyPPNfsZmnpt2iEeea5EzLaew/+c4JHn
SpRvPam7PIBHnishqlVUlF/mkedKtDH1kW+8ySPPlaiIcmwtvccjz5Uo21u5
YWsojzxX4udvabb0OY88V2Kh6D8vrzc88lxzPkeltq/6wCPPlagO+NywMo5H
nivhsrydIvsbjzxXYoREajU7iUeeK/F7x+hpn9N55LkSI006hg3J5ZHnmvFU
3+8XWswjz5VwikrKcKjikedKdDn/LuiIlEeeKzGW63VGouaR50o8sNK64faX
R54rsSVt989ofQfyXLPepbK2ncwcyHPN/n/aee2EjQN5rkSrnS6uVTwH8lwz
n8Vy6aRWDuS5Etdnm6eEdHAgz1XYONI3Xb+7A3muwvrBs7WW9nUgz1VY5f1w
0ptBDuS5CrZ2pyMt4ECeq9Cll92U5WMcyHMVpi+drxsxyYE8V6HDrdXZBjMd
yHMV+ge4Z86Z70Ceq2CQNaEpaLEDea4Cf8/YUTUrHMhzFbLbrHkycJ0Dea5C
2K/PQ/dudiDPVagq9K356O1AnqtQ9i4wzsjPgTxXISdKED3xkAN5roJZ6/35
J044kOcqXKvf0fGLvwN5rsJz16H++pcdyHMVVlwqdRHccCDPVfiYfzHJ564D
ea7C1zdLQ5+FOJDnKuxc4RFS9MyBPNc8b1nEd/sIB/JcBfdUb+6EKAfyXLNe
F2IO+sQ4kOcqzP8Wbh/82YE8V6Fvt5WJiT8dyHMVLvgrwxpSHMhzFXr2PhTR
LtOBPFch6FK3ggn5DuS5CkdSTPpvLHUgz1VYOVPw2L/agTzXzOdexcTnMgfy
XAWuVRerhDoH8lwzv3R+Y9VfB/JchRGyXAsjAz55rkL6rCvj25jxyXPN65sr
QgbZ8MlzFY7eW9lnKo9Pnqvgcjoqb5kLnzxX4Zveyddb2/PJcxWeWspeHezK
J89VqD1slxXQm0+eq3BuK6/rzQF88lyFu6ccbz/8j0+ea57vOmr485F88lwF
SecXem/G88lzFYymn5VFTeWT5yqMqmgwEc3mk+cqeJU6T4p245PnKrgN5L8U
LeWT5yrEt7Eb+2EVnzzX3I8tA7Uj1/PJcxXKW98rfrGFT56roPA9IAv14ZPn
mvN9pK5rkB+fPFeh2rL3qUuH+OS5Zrw3ptgfP8Enz1W4abrr+05/Pnmuwiaj
7NDVl/jkuQpxk269mhPIJ89V0FlWXi4I4pPnauw4WDS+60M+ea6Gd8zbJOun
fPJcjaGu54+qXvDJczWa4695Zr7lk+dqKM/Ub3kv5JPnagx7nB1yI45Pnqsh
L95o5vuNT56r0edoxrX5iXzyXI3GvhPm9Evjk+dqTLeqGGqWzSfP1egytmxq
YQGfPFdjy16vM2/K+OS5Gtbnn9WfrOGT52rkZiadXyTnk+dqPDQzcutRzyfP
1Rjx2HdKw18+ea7GcuclGz/pO5LnanyKyY4KMHUkz9WwfdZpsJu1I3muhvTz
usLW9o7kuRp/d2W8K3ZyJM/V+PzidszDto7kuRoZyySqNZ0dyXM1Xn1rWNil
pyN5rkbqWXFNST9H8lyNoASt50GDHclzNfZnLQpyhyN5rkaa9uBYzhhH8lyN
2rUfbb9NdCTP1XC063th73RH8lyN64dfju4715E8V+Opp1+HwoWO5Lkah2Ji
Bpxb5kieqzF88isfeDqS52oYDzxeWbHekTxXQxG15eyFLY7kuRpWvOAV//k4
kudqeD6dt65gjyN5rkb9sKi7Rw46kudqvOxvbNHluCN5rsaJlK2PvpxxJM/V
WHWyz87VFxzJczXsf/ns0r/mSJ5r1mPl3qe3bzmS55r9G+/LHXLfkTxX42T1
/WeJjxzJczXCgvvt8QxzJM/VOBrn7tfwypE8VyNKNv/F6XeO5Lkakr5LnVyi
HclzNaLDHr19HO9InmteS71ODv7uSJ6r4fuoMuBjoiN5rsamwbN/TElzJM/V
aL2ncFhqliN5rkaDW3KhW4Ejea7G2jeLhDmljuS5GsnBUQlLqx3JczVOv+vK
y5c6kudqqPsVXFyidiTP1Zi532ViVpMjea5GYRTfdZ6uE3muRk03m3kJRk7k
eR2u1wrCxlk4ked16HC/QPDe1ok8r8M9ST/jPg5O5Hkd0Haz8V0XJ/K8DqZG
aSNs2zuR53WwUAeF7+/iRJ7XYUGttXtNTyfyvA5F8cuGL+jvRJ7XIXhewoKY
wU7keR2u7Lr+tAucyPM6BL7RHnZ2tBN5XodL10boyyY4ked1cO9xzXDONCfy
vA6fZkwc/Wq2E3mu+fyVgHe2bk7kueb7Vj3b4LXEiTzXzD+h0O3bCifyvA79
KjcebL/WiTyvQyuVf+nuTU7keR0MT584mrjNiTyvw8Evgcs77HIiz+swYLOR
r/deJ/K8Do/aWyZ+OuREntdhS3eph90JJ/K8DkZPZH2Wn3Uiz+tQc3PO8P9t
3RQZaH0OdL9aVMf3mTLQ+vynff0bZwH7+TLQ+vyn/c8PoddalshA6/Of9qV3
Lt06sVIGWp//tPdi/yfLvV4GWp8Dw0dReoH3Fhloff7T3m5DbmLXThloff7T
/vMuy6Tj+2Sg9flPe+Wyw4uYjshA6/Of9lxO/so2J2Wg9flP+2vXFJ8Un5M5
AABropz3
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          PointSize[0.01], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.599}, {-7.61705694949, 7.98786925477}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"k1=0.004 kg/m\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"k2=0.01 kg/m\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7843905458464746`*^9, 3.784390692585466*^9, 
  3.785513009298662*^9, 3.785513074743493*^9, 3.7855137636295395`*^9, 
  3.785513940996242*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"b79d9cf1-0961-499b-bb96-e277ff94a287"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 126, "Title",ExpressionUUID->"675e1b50-f446-45af-8fd8-b7b11c0c607d"],
Cell[762, 27, 159, 3, 68, "Subtitle",ExpressionUUID->"31d8b2b9-819d-45e6-a8e9-db3031887f0d"],
Cell[924, 32, 280, 6, 44, "Text",ExpressionUUID->"e5786c72-c71c-4f29-9ff5-283e45483cea"],
Cell[CellGroupData[{
Cell[1229, 42, 1466, 41, 151, "Input",ExpressionUUID->"0700604d-3b33-4eda-839b-efb33dba2953"],
Cell[2698, 85, 791, 20, 61, "Output",ExpressionUUID->"a0fe5602-6e7f-48b8-ac82-0fc608e575ff"],
Cell[3492, 107, 13425, 240, 302, "Output",ExpressionUUID->"97107d53-38f0-48b7-9b75-436ded3b6c0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16954, 352, 3516, 92, 527, "Input",ExpressionUUID->"d7f05bcb-d7e8-40c5-9f60-2b1da16fc27a"],
Cell[20473, 446, 40782, 792, 304, "Output",ExpressionUUID->"b02915f6-736c-46a1-b12d-aeecb1dde187"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61292, 1243, 3458, 88, 527, "Input",ExpressionUUID->"7650f6b0-5c91-4e9d-bba6-1b336431296d"],
Cell[64753, 1333, 40592, 800, 304, "Output",ExpressionUUID->"94a6299c-f908-4035-8a35-e5e1eddf0804"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105382, 2138, 3403, 87, 527, "Input",ExpressionUUID->"d33b4660-0f0a-4591-be94-1e70e382c953"],
Cell[108788, 2227, 42920, 836, 304, "Output",ExpressionUUID->"541b16d2-2afa-4c3d-9882-9c43ad9744c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151745, 3068, 3269, 85, 527, "Input",ExpressionUUID->"6f879676-b705-4efb-93be-4e27d1009dee"],
Cell[155017, 3155, 46762, 900, 304, "Output",ExpressionUUID->"fb681e28-86cf-4a87-bcee-63e9f1695525"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201816, 4060, 163, 3, 68, "Subtitle",ExpressionUUID->"2a88d627-e517-49a7-bc27-a8ba83dd5fcd"],
Cell[201982, 4065, 314, 7, 73, "Text",ExpressionUUID->"e286c56a-b776-418f-92e9-4f52f0547675"],
Cell[CellGroupData[{
Cell[202321, 4076, 3265, 84, 621, "Input",ExpressionUUID->"4259b693-c51e-44d1-be6b-fedd1fc5d6f0"],
Cell[205589, 4162, 61628, 1083, 303, "Output",ExpressionUUID->"e2edd211-64e9-434e-851e-2674a17874a3"],
Cell[267220, 5247, 62006, 1090, 342, "Output",ExpressionUUID->"b79d9cf1-0961-499b-bb96-e277ff94a287"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

